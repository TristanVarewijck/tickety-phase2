[debug] [2023-04-11T11:42:01.582Z] ----------------------------------------------------------------------
[debug] [2023-04-11T11:42:01.584Z] Command:       /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/bin/node /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/bin/firebase emulators:start
[debug] [2023-04-11T11:42:01.585Z] CLI Version:   11.16.1
[debug] [2023-04-11T11:42:01.585Z] Platform:      darwin
[debug] [2023-04-11T11:42:01.585Z] Node Version:  v16.18.0
[debug] [2023-04-11T11:42:01.592Z] Time:          Tue Apr 11 2023 13:42:01 GMT+0200 (Midden-Europese zomertijd)
[debug] [2023-04-11T11:42:01.593Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-04-11T11:42:01.683Z] Object ".extensions" in "firebase.json" has unknown property: {"additionalProperty":"firestore-send-email"}
[debug] [2023-04-11T11:42:01.689Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-04-11T11:42:01.689Z] > authorizing via signed-in user (tristan.varewijck@gmail.com)
[debug] [2023-04-11T11:42:02.020Z] java version "19.0.1" 2022-10-18

[debug] [2023-04-11T11:42:02.021Z] Java(TM) SE Runtime Environment (build 19.0.1+10-21)
Java HotSpot(TM) 64-Bit Server VM (build 19.0.1+10-21, mixed mode, sharing)

[debug] [2023-04-11T11:42:02.028Z] Parsed Java major version: 19
[info] i  emulators: Starting emulators: auth, functions, firestore, hosting, extensions {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, functions, firestore, hosting, extensions"}}
[debug] [2023-04-11T11:42:02.035Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 [none]
[debug] [2023-04-11T11:42:02.589Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 200
[debug] [2023-04-11T11:42:02.589Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 {"projectId":"tickety-85fd7","projectNumber":"276533721536","displayName":"Tickety","name":"projects/tickety-85fd7","resources":{"hostingSite":"tickety-85fd7","storageBucket":"tickety-85fd7.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_50fc1457-be1a-4b1c-b1dd-c73d7a5dcf80"}
[debug] [2023-04-11T11:42:02.591Z] Successfully read params from firestore-send-email.env
[debug] [2023-04-11T11:42:02.592Z] Error: ENOENT: no such file or directory, open '/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/extensions/firestore-send-email.env.default'
[debug] [2023-04-11T11:42:02.593Z] Error: ENOENT: no such file or directory, open '/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/extensions/firestore-send-email.env.276533721536'
[debug] [2023-04-11T11:42:02.593Z] Error: ENOENT: no such file or directory, open '/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/extensions/firestore-send-email.env.tickety-85fd7'
[debug] [2023-04-11T11:42:02.593Z] Error: ENOENT: no such file or directory, open '/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/extensions/firestore-send-email.env.local'
[debug] [2023-04-11T11:42:02.594Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/adminSdkConfig [none]
[debug] [2023-04-11T11:42:02.896Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/adminSdkConfig 200
[debug] [2023-04-11T11:42:02.896Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/adminSdkConfig {"projectId":"tickety-85fd7","storageBucket":"tickety-85fd7.appspot.com","locationId":"us-central"}
[debug] [2023-04-11T11:42:02.917Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 [none]
[debug] [2023-04-11T11:42:03.162Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 200
[debug] [2023-04-11T11:42:03.162Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 {"projectId":"tickety-85fd7","projectNumber":"276533721536","displayName":"Tickety","name":"projects/tickety-85fd7","resources":{"hostingSite":"tickety-85fd7","storageBucket":"tickety-85fd7.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_50fc1457-be1a-4b1c-b1dd-c73d7a5dcf80"}
[debug] [2023-04-11T11:42:03.164Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions filter=&showPrereleases=false&pageSize=100&pageToken=
[debug] [2023-04-11T11:42:03.973Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions 200
[debug] [2023-04-11T11:42:03.975Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions {"extensionVersions":[{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.0","ref":"firebase/firestore-send-email@0.1.0","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.0","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${MAIL_COLLECTION}/{id}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Elliot Hesp","email":"elliot@invertase.io","url":"https://github.com/ehesp"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/commits/master","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1"},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).","required":true,"validationRegex":"^\\S+@\\S+\\.\\S+$","validationErrorMessage":"Must be a valid email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/database/firestore/data).\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n```\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    text: 'This is the plaintext section of the email body.',\n    html: 'This is the <code>HTML</code> section of the email body.',\n  }\n}).then(() => console.log('Queued email for delivery!'));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n* **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n* **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n* **to:** A single recipient email address or an array containing multiple recipient email addresses.\n* **toUids:** An array containing the recipient UIDs.\n* **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **ccUids:** An array containing the CC recipient UIDs.\n* **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **bccUids:** An array containing the BCC recipient UIDs.\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n* **messageId:** A message ID header for the email, if any.\n* **subject:** The subject of the email.\n* **text:** The plaintext content of the email.\n* **html:** The HTML content of the email.\n* **amp:** The [AMP4EMAIL][amp4email] content of the email.\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the *template name* in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n* **subject:** A template string for the subject of the email.\n* **text:** A template string for the plaintext content of the email.\n* **html:** A template string for the HTML content of the email.\n* **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  toUids: ['abc123'],\n  template: {\n    name: 'following',\n    data: {\n      username: 'ada',\n      name: 'Ada Lovelace'\n    }\n  }\n})\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n* **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n* **startTime:** Timestamp when email processing began.\n* **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n* **error:** If there was an email delivery error, an error message will be populated here.\n* **attempts:** Number of delivery attempts for this email.\n* **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n* **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  * **messageId:** The message ID of the delivered email.\n  * **accepted:** Array of email addresses to which the email was successfully delivered.\n  * **rejected:** Array of email addresses to which the email could not be delivered.\n  * **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  * **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/database/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# firestore-send-email\n\n**VERSION**: 0.1.0\n\n**DESCRIPTION**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**CONFIGURATION PARAMETERS:**\n\n* Deployment location: Where should the extension be deployed? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server that this extension can use to deliver email.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**CLOUD FUNCTIONS CREATED:**\n\n* processQueue (providers/cloud.firestore/eventTypes/document.write)\n\n\n\n**DETAILS**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n**ACCESS REQUIRED**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"DEPRECATED","hash":"ed8c6b25ddb6a9499f8c4b9e90985668a583cf54285bf80a35987a7ab989f04b","createTime":"2019-09-18T20:51:55.866666149Z","id":"0.1.0","releaseNotes":"Initial release of the _Trigger Email_ extension.\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.1","ref":"firebase/firestore-send-email@0.1.1","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.1","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${MAIL_COLLECTION}/{id}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Elliot Hesp","email":"elliot@invertase.io","url":"https://github.com/ehesp"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/releases","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).","required":true,"validationRegex":"^\\S+@\\S+\\.\\S+$","validationErrorMessage":"Must be a valid email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/database/firestore/data).\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n```\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    text: 'This is the plaintext section of the email body.',\n    html: 'This is the <code>HTML</code> section of the email body.',\n  }\n}).then(() => console.log('Queued email for delivery!'));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n* **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n* **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n* **to:** A single recipient email address or an array containing multiple recipient email addresses.\n* **toUids:** An array containing the recipient UIDs.\n* **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **ccUids:** An array containing the CC recipient UIDs.\n* **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **bccUids:** An array containing the BCC recipient UIDs.\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n* **messageId:** A message ID header for the email, if any.\n* **subject:** The subject of the email.\n* **text:** The plaintext content of the email.\n* **html:** The HTML content of the email.\n* **amp:** The [AMP4EMAIL][amp4email] content of the email.\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the *template name* in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n* **subject:** A template string for the subject of the email.\n* **text:** A template string for the plaintext content of the email.\n* **html:** A template string for the HTML content of the email.\n* **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  toUids: ['abc123'],\n  template: {\n    name: 'following',\n    data: {\n      username: 'ada',\n      name: 'Ada Lovelace'\n    }\n  }\n})\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n* **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n* **startTime:** Timestamp when email processing began.\n* **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n* **error:** If there was an email delivery error, an error message will be populated here.\n* **attempts:** Number of delivery attempts for this email.\n* **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n* **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  * **messageId:** The message ID of the delivered email.\n  * **accepted:** Array of email addresses to which the email was successfully delivered.\n  * **rejected:** Array of email addresses to which the email could not be delivered.\n  * **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  * **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/database/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server that this extension can use to deliver email.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"DEPRECATED","hash":"1eb3754dd51643e642db8f8e534377db50fa2a42b90f11499f35b663917de3bd","createTime":"2019-11-21T19:24:32.193743613Z","id":"0.1.1","releaseNotes":"fixed - Fixed \"cold start\" errors experienced when the extension runs after a period of inactivity (issue #48).\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.10","ref":"firebase/firestore-send-email@0.1.10","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.10","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n- **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n- **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n- **to:** A single recipient email address or an array containing multiple recipient email addresses.\n- **toUids:** An array containing the recipient UIDs.\n- **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **ccUids:** An array containing the CC recipient UIDs.\n- **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **bccUids:** An array containing the BCC recipient UIDs.\n- **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n- **messageId:** A message ID header for the email, if any.\n- **subject:** The subject of the email.\n- **text:** The plaintext content of the email.\n- **html:** The HTML content of the email.\n- **amp:** The [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the _template name_ in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n- **subject:** A template string for the subject of the email.\n- **text:** A template string for the plaintext content of the email.\n- **html:** A template string for the HTML content of the email.\n- **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array of attachments with template strings as values; [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pre-generated MIME node (be aware that your email has no access to the cloud server's file system).\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\",\n  attachments: [\n    {\n     filename: \"{{username}}.jpg\",\n     path: \"{{imagePath}}\" \n    }\n  ]\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    toUids: [\"abc123\"],\n    template: {\n      name: \"following\",\n      data: {\n        username: \"ada\",\n        name: \"Ada Lovelace\",\n        imagePath: \"https://path-to-file/image-name.jpg\"\n      },\n    },\n  });\n```\n\n#### Template Partials\n\nTemplates may be registered reusable [partials](https://handlebarsjs.com/guide/partials.html) by specifying `{partial: true}` in the document in the template collection. Each of the standard data fields (`subject`, `html`, `text`, and `amp`) will be defined as a partial used only in its own environment. For example, a partial called `footer` might have data like:\n\n```js\n{\n  partial: true,\n  html: \"<p>This mail was sent by ExampleApp, Inc. <a href='https://example.com/unsubscribe'>Unsubscribe</a></p>\",\n  text: \"This mail was sent by ExampleApp, Inc. Unsubscribe here: https://example.com/unsubscribe\"\n}\n```\n\nIn another template, the partial can be included by its name (document ID):\n\n```html\n<p>This is my main template content, but it will use a common footer.</p>\n\n{{> footer }}\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n- **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n- **startTime:** Timestamp when email processing began.\n- **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n- **error:** If there was an email delivery error, an error message will be populated here.\n- **attempts:** Number of delivery attempts for this email.\n- **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n- **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  - **messageId:** The message ID of the delivered email.\n  - **accepted:** Array of email addresses to which the email was successfully delivered.\n  - **rejected:** Array of email addresses to which the email could not be delivered.\n  - **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  - **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"68405629dc1ca741c39e2c7da50d5c89dd35984810e7d38648790221edf2d180","createTime":"2021-06-17T18:02:00.457428Z","id":"0.1.10","releaseNotes":"feature - added Warsaw (europe-central2) location (#677)\n\nfeature - updated Cloud Functions runtime to Node.js 14 (#660)\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.11","ref":"firebase/firestore-send-email@0.1.11","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.11","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n- **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n- **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n- **to:** A single recipient email address or an array containing multiple recipient email addresses.\n- **toUids:** An array containing the recipient UIDs.\n- **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **ccUids:** An array containing the CC recipient UIDs.\n- **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **bccUids:** An array containing the BCC recipient UIDs.\n- **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n- **messageId:** A message ID header for the email, if any.\n- **subject:** The subject of the email.\n- **text:** The plaintext content of the email.\n- **html:** The HTML content of the email.\n- **amp:** The [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the _template name_ in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n- **subject:** A template string for the subject of the email.\n- **text:** A template string for the plaintext content of the email.\n- **html:** A template string for the HTML content of the email.\n- **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array of attachments with template strings as values; [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pre-generated MIME node (be aware that your email has no access to the cloud server's file system).\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\",\n  attachments: [\n    {\n     filename: \"{{username}}.jpg\",\n     path: \"{{imagePath}}\" \n    }\n  ]\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    toUids: [\"abc123\"],\n    template: {\n      name: \"following\",\n      data: {\n        username: \"ada\",\n        name: \"Ada Lovelace\",\n        imagePath: \"https://path-to-file/image-name.jpg\"\n      },\n    },\n  });\n```\n\n#### Template Partials\n\nTemplates may be registered reusable [partials](https://handlebarsjs.com/guide/partials.html) by specifying `{partial: true}` in the document in the template collection. Each of the standard data fields (`subject`, `html`, `text`, and `amp`) will be defined as a partial used only in its own environment. For example, a partial called `footer` might have data like:\n\n```js\n{\n  partial: true,\n  html: \"<p>This mail was sent by ExampleApp, Inc. <a href='https://example.com/unsubscribe'>Unsubscribe</a></p>\",\n  text: \"This mail was sent by ExampleApp, Inc. Unsubscribe here: https://example.com/unsubscribe\"\n}\n```\n\nIn another template, the partial can be included by its name (document ID):\n\n```html\n<p>This is my main template content, but it will use a common footer.</p>\n\n{{> footer }}\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n- **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n- **startTime:** Timestamp when email processing began.\n- **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n- **error:** If there was an email delivery error, an error message will be populated here.\n- **attempts:** Number of delivery attempts for this email.\n- **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n- **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  - **messageId:** The message ID of the delivered email.\n  - **accepted:** Array of email addresses to which the email was successfully delivered.\n  - **rejected:** Array of email addresses to which the email could not be delivered.\n  - **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  - **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"b27d9abdce9a45b2c9c60f66c26e3e160b9177abdd35810855ae0639dcef9831","createTime":"2021-08-19T22:57:43.668508Z","id":"0.1.11","releaseNotes":"fixed - added fallback for finding email templates\n\nfixed - removed duplicate Warsaw location\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.12","ref":"firebase/firestore-send-email@0.1.12","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.12","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n- **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n- **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n- **to:** A single recipient email address or an array containing multiple recipient email addresses.\n- **toUids:** An array containing the recipient UIDs.\n- **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **ccUids:** An array containing the CC recipient UIDs.\n- **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **bccUids:** An array containing the BCC recipient UIDs.\n- **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n- **messageId:** A message ID header for the email, if any.\n- **subject:** The subject of the email.\n- **text:** The plaintext content of the email.\n- **html:** The HTML content of the email.\n- **amp:** The [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the _template name_ in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n- **subject:** A template string for the subject of the email.\n- **text:** A template string for the plaintext content of the email.\n- **html:** A template string for the HTML content of the email.\n- **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array of attachments with template strings as values; [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pre-generated MIME node (be aware that your email has no access to the cloud server's file system).\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\",\n  attachments: [\n    {\n     filename: \"{{username}}.jpg\",\n     path: \"{{imagePath}}\" \n    }\n  ]\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    toUids: [\"abc123\"],\n    template: {\n      name: \"following\",\n      data: {\n        username: \"ada\",\n        name: \"Ada Lovelace\",\n        imagePath: \"https://path-to-file/image-name.jpg\"\n      },\n    },\n  });\n```\n\n#### Template Partials\n\nTemplates may be registered reusable [partials](https://handlebarsjs.com/guide/partials.html) by specifying `{partial: true}` in the document in the template collection. Each of the standard data fields (`subject`, `html`, `text`, and `amp`) will be defined as a partial used only in its own environment. For example, a partial called `footer` might have data like:\n\n```js\n{\n  partial: true,\n  html: \"<p>This mail was sent by ExampleApp, Inc. <a href='https://example.com/unsubscribe'>Unsubscribe</a></p>\",\n  text: \"This mail was sent by ExampleApp, Inc. Unsubscribe here: https://example.com/unsubscribe\"\n}\n```\n\nIn another template, the partial can be included by its name (document ID):\n\n```html\n<p>This is my main template content, but it will use a common footer.</p>\n\n{{> footer }}\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n- **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n- **startTime:** Timestamp when email processing began.\n- **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n- **error:** If there was an email delivery error, an error message will be populated here.\n- **attempts:** Number of delivery attempts for this email.\n- **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n- **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  - **messageId:** The message ID of the delivered email.\n  - **accepted:** Array of email addresses to which the email was successfully delivered.\n  - **rejected:** Array of email addresses to which the email could not be delivered.\n  - **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  - **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"0c6040b6620388fd855a03275ca6e06706746e1f306890688e7f5b306a25b8f1","createTime":"2021-10-20T18:20:06.841274Z","id":"0.1.12","releaseNotes":"fixed - moved lease expired error message to delivery document (#726)\n\nfeature - add Taiwan and Singapore Cloud Function locations (#729)\n\nfixed - empty template attachments fall back to message attachments (#719)\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.13","ref":"firebase/firestore-send-email@0.1.13","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.13","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"4286ee730224ce486fc4b9bb00630d94096baa44f3f5abb1b136c2546d22ed2b","createTime":"2021-12-13T21:58:41.288845Z","id":"0.1.13","releaseNotes":"docs - updated POSTINSTALL docs to link to Firebase documentation\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.15","ref":"firebase/firestore-send-email@0.1.15","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.15","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nOr in Firestore the following fields can be added:\n\n| Field       | Type        | Example                                                                                 |\n| ----------- | ----------- | --------------------------------------------------------------------------------------- |\n| `to`        | String      | `\"someone@example.com\"`                                                                 |\n| `message`   | Map         | `{ subject: \"Hello from Firebase!\", html: \"This is an <code>HTML</code> email body.\" }` |\n\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"4617c9f7d1f4b721694fc4c3169c63e1fae3a8ce9c0d0bf38a5e663b5940616f","createTime":"2022-03-07T16:49:47.579531Z","id":"0.1.15","releaseNotes":"fixed - generate correct `package-lock.json` files after `lerna bootstrap` (#779)\n\nfixed - added local smtp server for running tests (#794)\n\nfixed - add SMTP secret password (#840)\n\nfixed - added logging for invalid email messages, documentation updated with firestore example (#710)\n\nfixed - update validate workflow to use node14\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.16","ref":"firebase/firestore-send-email@0.1.16","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.16","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"78240b08f8eb5f577b6987b5949275445929e3e53c20193f46f8681c0005a17b","createTime":"2022-03-30T14:27:46.830709Z","id":"0.1.16","releaseNotes":"fixed - updated the extensions regular expression validation to contain additional smtp formats (#909)\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.17","ref":"firebase/firestore-send-email@0.1.17","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.17","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"9ec24ebc82e7f47df0a038d5f7db91394652d0cff3f0f882e9e197b18ff25877","createTime":"2022-05-10T17:02:00.301078Z","id":"0.1.17","releaseNotes":"fixed - update SMTP connection URI validation regex (#942)\n\nfixed - hide password from showing up in logs (#943)\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.18","ref":"firebase/firestore-send-email@0.1.18","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.18","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  from: 'somebodyelse@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\n**Custom senders**\n\nThe `from` field is an optional parameter. If you specify a value for this field, ensure the receiving SMTP server accepts custom senders in this field. Typically, a provider will use the email address provided by the configured account if the provider doesn't allow custom senders.\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"e2e26f128addba20caa7424f2415c42448f4e9221de4597f1588d16b06c66b65","createTime":"2022-06-22T18:04:26.985835Z","id":"0.1.18","releaseNotes":"fixed - added encoding for connection string passwords (#985)\n\nfixed - move log statement outside of forEach loop (#950)\n\nfeature - upgrade to the latest emulator updates (#995)\n\nfixed - further updated the extensions regular expression validation to contain additional smtp formats (#909)\n\nfixed - generate correct `package-lock.json` files after `lerna bootstrap` (#779)\n\nfixed - added local smtp server for running tests (#794)\n\nfixed - add SMTP secret password (#840)\n\nfixed - added logging for invalid email messages, documentation updated with firestore example (#710)\n\nfixed - update validate workflow to use node14\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.19","ref":"firebase/firestore-send-email@0.1.19","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.19","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  from: 'somebodyelse@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\n**Custom senders**\n\nThe `from` field is an optional parameter. If you specify a value for this field, ensure the receiving SMTP server accepts custom senders in this field. Typically, a provider will use the email address provided by the configured account if the provider doesn't allow custom senders.\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"702b73f5be4618b7984605a41aad854002f6e1352f4dce2935f638e1e51c32b4","createTime":"2022-06-22T20:58:04.946830Z","id":"0.1.19","releaseNotes":"fixed - generate new lib folder\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.2","ref":"firebase/firestore-send-email@0.1.2","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.2","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${MAIL_COLLECTION}/{id}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Elliot Hesp","email":"elliot@invertase.io","url":"https://github.com/ehesp"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your database. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).","required":true,"validationRegex":"^\\S+@\\S+\\.\\S+$","validationErrorMessage":"Must be a valid email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/database/firestore/data).\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    text: 'This is the plaintext section of the email body.',\n    html: 'This is the <code>HTML</code> section of the email body.',\n  }\n}).then(() => console.log('Queued email for delivery!'));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n* **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n* **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n* **to:** A single recipient email address or an array containing multiple recipient email addresses.\n* **toUids:** An array containing the recipient UIDs.\n* **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **ccUids:** An array containing the CC recipient UIDs.\n* **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **bccUids:** An array containing the BCC recipient UIDs.\n* **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n* **messageId:** A message ID header for the email, if any.\n* **subject:** The subject of the email.\n* **text:** The plaintext content of the email.\n* **html:** The HTML content of the email.\n* **amp:** The [AMP4EMAIL][amp4email] content of the email.\n* **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the *template name* in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n* **subject:** A template string for the subject of the email.\n* **text:** A template string for the plaintext content of the email.\n* **html:** A template string for the HTML content of the email.\n* **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  toUids: ['abc123'],\n  template: {\n    name: 'following',\n    data: {\n      username: 'ada',\n      name: 'Ada Lovelace'\n    }\n  }\n})\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n* **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n* **startTime:** Timestamp when email processing began.\n* **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n* **error:** If there was an email delivery error, an error message will be populated here.\n* **attempts:** Number of delivery attempts for this email.\n* **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n* **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  * **messageId:** The message ID of the delivered email.\n  * **accepted:** Array of email addresses to which the email was successfully delivered.\n  * **rejected:** Array of email addresses to which the email could not be delivered.\n  * **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  * **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/database/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your database. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server that this extension can use to deliver email.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"DEPRECATED","hash":"06e035c41c42446b38a8429ebed064088862c2e5ea0e183e5af01bd6cef1e9c8","createTime":"2020-01-30T20:57:51.806095073Z","id":"0.1.2","releaseNotes":"feature - Support custom email headers. The extension reads from the `headers` field in the Cloud Firestore document (detailed instructions provided in the [POSTINSTALL file](https://github.com/firebase/extensions/blob/master/firestore-send-email/POSTINSTALL.md#using-this-extension). (issue #77)\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.20","ref":"firebase/firestore-send-email@0.1.20","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.20","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"133f6c8a9f07121f984be7eea6159966961b099b6438a4a78bf5e97431208b93","createTime":"2022-11-21T18:51:43.489477Z","id":"0.1.20","releaseNotes":"docs - add google app passwords guide\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.21","ref":"firebase/firestore-send-email@0.1.21","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.21","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email","events":[{"type":"firebase.extensions.firestore-send-email.v1.onStart","description":"Occurs when the extension starts execution."},{"type":"firebase.extensions.firestore-send-email.v1.onProcessing","description":"Occurs when the extension attempts to process an email."},{"type":"firebase.extensions.firestore-send-email.v1.onRetry","description":"Occurs when the extension attempts to resend an email."},{"type":"firebase.extensions.firestore-send-email.v1.onPending","description":"Occurs when an email has a pending status."},{"type":"firebase.extensions.firestore-send-email.v1.onSuccess","description":"Occurs when the extension successfully sends an email."},{"type":"firebase.extensions.firestore-send-email.v1.onComplete","description":"Occurs when the extension completes execution."},{"type":"firebase.extensions.firestore-send-email.v1.onError","description":"Occurs when the extension fails to complete execution."}]},"state":"PUBLISHED","hash":"c1607d34062d8571abc434f17334396905408390ea8afcc27e4b0e1207966572","createTime":"2023-01-06T09:15:43.012310Z","id":"0.1.21","releaseNotes":"feature - add lifecycle events\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.22","ref":"firebase/firestore-send-email@0.1.22","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.22","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."},{"param":"TTL_EXPIRE_TYPE","label":"Firestore TTL type","type":"SELECT","description":"Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".","required":true,"options":[{"value":"never","label":"Never"},{"value":"hour","label":"Hour"},{"value":"day","label":"Day"},{"value":"week","label":"Week"},{"value":"month","label":"Month"},{"value":"year","label":"Year"}],"default":"never"},{"param":"TTL_EXPIRE_VALUE","label":"Firestore TTL value","type":"STRING","description":"In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.","required":true,"default":"1","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"The value must be an integer value greater than zero."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n* Firestore TTL type: Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".\n\n* Firestore TTL value: In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email","events":[{"type":"firebase.extensions.firestore-send-email.v1.onStart","description":"Occurs when the extension starts execution."},{"type":"firebase.extensions.firestore-send-email.v1.onProcessing","description":"Occurs when the extension attempts to process an email."},{"type":"firebase.extensions.firestore-send-email.v1.onRetry","description":"Occurs when the extension attempts to resend an email."},{"type":"firebase.extensions.firestore-send-email.v1.onPending","description":"Occurs when an email has a pending status."},{"type":"firebase.extensions.firestore-send-email.v1.onSuccess","description":"Occurs when the extension successfully sends an email."},{"type":"firebase.extensions.firestore-send-email.v1.onComplete","description":"Occurs when the extension completes execution."},{"type":"firebase.extensions.firestore-send-email.v1.onError","description":"Occurs when the extension fails to complete execution."}]},"state":"PUBLISHED","hash":"7badb9bae5ecff0689c4ec1fc308836f9ce8a3296ad379bfe1bd64998058c8fe","createTime":"2023-02-08T12:01:27.117137Z","id":"0.1.22","releaseNotes":"fixed - fix typo in extension\n\nfeature - upgrade extensions to the latest firebase-admin sdk\n\nfeature - improve TTL params\n\nfeature - add TTL support\n\nfixed - read and write delivery status from inside a single transaction\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.23","ref":"firebase/firestore-send-email@0.1.23","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.23","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."},{"param":"TTL_EXPIRE_TYPE","label":"Firestore TTL type","type":"SELECT","description":"Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".","required":true,"options":[{"value":"never","label":"Never"},{"value":"hour","label":"Hour"},{"value":"day","label":"Day"},{"value":"week","label":"Week"},{"value":"month","label":"Month"},{"value":"year","label":"Year"}],"default":"never"},{"param":"TTL_EXPIRE_VALUE","label":"Firestore TTL value","type":"STRING","description":"In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.","required":true,"default":"1","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"The value must be an integer value greater than zero."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n* Firestore TTL type: Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".\n\n* Firestore TTL value: In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email","events":[{"type":"firebase.extensions.firestore-send-email.v1.onStart","description":"Occurs when the extension starts execution."},{"type":"firebase.extensions.firestore-send-email.v1.onProcessing","description":"Occurs when the extension attempts to process an email."},{"type":"firebase.extensions.firestore-send-email.v1.onRetry","description":"Occurs when the extension attempts to resend an email."},{"type":"firebase.extensions.firestore-send-email.v1.onPending","description":"Occurs when an email has a pending status."},{"type":"firebase.extensions.firestore-send-email.v1.onSuccess","description":"Occurs when the extension successfully sends an email."},{"type":"firebase.extensions.firestore-send-email.v1.onComplete","description":"Occurs when the extension completes execution."},{"type":"firebase.extensions.firestore-send-email.v1.onError","description":"Occurs when the extension fails to complete execution."}]},"state":"PUBLISHED","hash":"11f9fb11da6c2aca1451aa1d3e406fda30f1043f85474587d6b64122e96a5552","createTime":"2023-02-15T18:36:43.304410Z","id":"0.1.23","releaseNotes":"fixed - added template check when no message exists\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.24","ref":"firebase/firestore-send-email@0.1.24","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.24","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."},{"param":"TTL_EXPIRE_TYPE","label":"Firestore TTL type","type":"SELECT","description":"Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".","required":true,"options":[{"value":"never","label":"Never"},{"value":"hour","label":"Hour"},{"value":"day","label":"Day"},{"value":"week","label":"Week"},{"value":"month","label":"Month"},{"value":"year","label":"Year"}],"default":"never"},{"param":"TTL_EXPIRE_VALUE","label":"Firestore TTL value","type":"STRING","description":"In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.","required":true,"default":"1","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"The value must be an integer value greater than zero."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email from Firestore Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","readmeContent":"# Trigger Email from Firestore\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email from Firestore Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n* Firestore TTL type: Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".\n\n* Firestore TTL value: In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email from Firestore","events":[{"type":"firebase.extensions.firestore-send-email.v1.onStart","description":"Occurs when the extension starts execution."},{"type":"firebase.extensions.firestore-send-email.v1.onProcessing","description":"Occurs when the extension attempts to process an email."},{"type":"firebase.extensions.firestore-send-email.v1.onRetry","description":"Occurs when the extension attempts to resend an email."},{"type":"firebase.extensions.firestore-send-email.v1.onPending","description":"Occurs when an email has a pending status."},{"type":"firebase.extensions.firestore-send-email.v1.onSuccess","description":"Occurs when the extension successfully sends an email."},{"type":"firebase.extensions.firestore-send-email.v1.onComplete","description":"Occurs when the extension completes execution."},{"type":"firebase.extensions.firestore-send-email.v1.onError","description":"Occurs when the extension fails to complete execution."}]},"state":"PUBLISHED","hash":"b52654fb53fc590ab91fa131c8ba3fbd2ac34297fab29cbbdb925e2490b799fc","createTime":"2023-03-17T16:19:59.829529Z","id":"0.1.24","releaseNotes":"fixed - dont return early\n\nfixed - moved warning about no message and checked if templates are referenced\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.25","ref":"firebase/firestore-send-email@0.1.25","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.25","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."},{"param":"TTL_EXPIRE_TYPE","label":"Firestore TTL type","type":"SELECT","description":"Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".","required":true,"options":[{"value":"never","label":"Never"},{"value":"hour","label":"Hour"},{"value":"day","label":"Day"},{"value":"week","label":"Week"},{"value":"month","label":"Month"},{"value":"year","label":"Year"}],"default":"never"},{"param":"TTL_EXPIRE_VALUE","label":"Firestore TTL value","type":"STRING","description":"In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.","required":true,"default":"1","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"The value must be an integer value greater than zero."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email from Firestore Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","readmeContent":"# Trigger Email from Firestore\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email from Firestore Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n* Firestore TTL type: Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".\n\n* Firestore TTL value: In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email from Firestore","events":[{"type":"firebase.extensions.firestore-send-email.v1.onStart","description":"Occurs when the extension starts execution."},{"type":"firebase.extensions.firestore-send-email.v1.onProcessing","description":"Occurs when the extension attempts to process an email."},{"type":"firebase.extensions.firestore-send-email.v1.onRetry","description":"Occurs when the extension attempts to resend an email."},{"type":"firebase.extensions.firestore-send-email.v1.onPending","description":"Occurs when an email has a pending status."},{"type":"firebase.extensions.firestore-send-email.v1.onSuccess","description":"Occurs when the extension successfully sends an email."},{"type":"firebase.extensions.firestore-send-email.v1.onComplete","description":"Occurs when the extension completes execution."},{"type":"firebase.extensions.firestore-send-email.v1.onError","description":"Occurs when the extension fails to complete execution."}]},"state":"PUBLISHED","hash":"8790ec65165d9a18afedde0428416e26d35f422d5a1b714720305d63fc650859","createTime":"2023-04-05T14:33:07.327071Z","id":"0.1.25","releaseNotes":"fixed - change missingDeliveryField logging from `error` to `warn`\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.3","ref":"firebase/firestore-send-email@0.1.3","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.3","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${MAIL_COLLECTION}/{id}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Elliot Hesp","email":"elliot@invertase.io","url":"https://github.com/ehesp"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).","required":true,"validationRegex":"^\\S+@\\S+\\.\\S+$","validationErrorMessage":"Must be a valid email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/database/firestore/data).\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    text: 'This is the plaintext section of the email body.',\n    html: 'This is the <code>HTML</code> section of the email body.',\n  }\n}).then(() => console.log('Queued email for delivery!'));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n* **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n* **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n* **to:** A single recipient email address or an array containing multiple recipient email addresses.\n* **toUids:** An array containing the recipient UIDs.\n* **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **ccUids:** An array containing the CC recipient UIDs.\n* **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **bccUids:** An array containing the BCC recipient UIDs.\n* **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n* **messageId:** A message ID header for the email, if any.\n* **subject:** The subject of the email.\n* **text:** The plaintext content of the email.\n* **html:** The HTML content of the email.\n* **amp:** The [AMP4EMAIL][amp4email] content of the email.\n* **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the *template name* in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n* **subject:** A template string for the subject of the email.\n* **text:** A template string for the plaintext content of the email.\n* **html:** A template string for the HTML content of the email.\n* **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  toUids: ['abc123'],\n  template: {\n    name: 'following',\n    data: {\n      username: 'ada',\n      name: 'Ada Lovelace'\n    }\n  }\n})\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n* **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n* **startTime:** Timestamp when email processing began.\n* **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n* **error:** If there was an email delivery error, an error message will be populated here.\n* **attempts:** Number of delivery attempts for this email.\n* **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n* **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  * **messageId:** The message ID of the delivered email.\n  * **accepted:** Array of email addresses to which the email was successfully delivered.\n  * **rejected:** Array of email addresses to which the email could not be delivered.\n  * **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  * **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/database/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your database. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server that this extension can use to deliver email.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"DEPRECATED","hash":"0e7af6658ec8b9c183e7c067c3c757e91051f5c35f91252035d0488ae0b3060e","createTime":"2020-02-06T18:22:41.581234142Z","id":"0.1.3","releaseNotes":"fixed - Disables HTML escaping for plain text fields when using the `templates` option.\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.4","ref":"firebase/firestore-send-email@0.1.4","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.4","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${MAIL_COLLECTION}/{id}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Elliot Hesp","email":"elliot@invertase.io","url":"https://github.com/ehesp"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/database/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    text: 'This is the plaintext section of the email body.',\n    html: 'This is the <code>HTML</code> section of the email body.',\n  }\n}).then(() => console.log('Queued email for delivery!'));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n* **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n* **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n* **to:** A single recipient email address or an array containing multiple recipient email addresses.\n* **toUids:** An array containing the recipient UIDs.\n* **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **ccUids:** An array containing the CC recipient UIDs.\n* **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **bccUids:** An array containing the BCC recipient UIDs.\n* **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n* **messageId:** A message ID header for the email, if any.\n* **subject:** The subject of the email.\n* **text:** The plaintext content of the email.\n* **html:** The HTML content of the email.\n* **amp:** The [AMP4EMAIL][amp4email] content of the email.\n* **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the *template name* in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n* **subject:** A template string for the subject of the email.\n* **text:** A template string for the plaintext content of the email.\n* **html:** A template string for the HTML content of the email.\n* **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  toUids: ['abc123'],\n  template: {\n    name: 'following',\n    data: {\n      username: 'ada',\n      name: 'Ada Lovelace'\n    }\n  }\n})\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n* **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n* **startTime:** Timestamp when email processing began.\n* **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n* **error:** If there was an email delivery error, an error message will be populated here.\n* **attempts:** Number of delivery attempts for this email.\n* **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n* **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  * **messageId:** The message ID of the delivered email.\n  * **accepted:** Array of email addresses to which the email was successfully delivered.\n  * **rejected:** Array of email addresses to which the email could not be delivered.\n  * **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  * **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/database/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server that this extension can use to deliver email.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"DEPRECATED","hash":"56b10d51ca618697ba4f9d456d1ff8addfa0786a98c87dde11abe4e31f5d48ee","createTime":"2020-05-07T17:13:51.294236213Z","id":"0.1.4","releaseNotes":"feature - Updated \"Default FROM address\" parameter to accept either an email address (`foobar@example.com`) _or_ a name plus email address (`Friendly Firebaser <foobar@example.com>`). (issue #167)\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.5","ref":"firebase/firestore-send-email@0.1.5","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.5","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${MAIL_COLLECTION}/{id}\nlocation: ${LOCATION}\nruntime: nodejs10\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    text: 'This is the plaintext section of the email body.',\n    html: 'This is the <code>HTML</code> section of the email body.',\n  }\n}).then(() => console.log('Queued email for delivery!'));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n* **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n* **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n* **to:** A single recipient email address or an array containing multiple recipient email addresses.\n* **toUids:** An array containing the recipient UIDs.\n* **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **ccUids:** An array containing the CC recipient UIDs.\n* **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n* **bccUids:** An array containing the BCC recipient UIDs.\n* **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n* **messageId:** A message ID header for the email, if any.\n* **subject:** The subject of the email.\n* **text:** The plaintext content of the email.\n* **html:** The HTML content of the email.\n* **amp:** The [AMP4EMAIL][amp4email] content of the email.\n* **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the *template name* in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n* **subject:** A template string for the subject of the email.\n* **text:** A template string for the plaintext content of the email.\n* **html:** A template string for the HTML content of the email.\n* **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin.firestore().collection('${param:MAIL_COLLECTION}').add({\n  toUids: ['abc123'],\n  template: {\n    name: 'following',\n    data: {\n      username: 'ada',\n      name: 'Ada Lovelace'\n    }\n  }\n})\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n* **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n* **startTime:** Timestamp when email processing began.\n* **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n* **error:** If there was an email delivery error, an error message will be populated here.\n* **attempts:** Number of delivery attempts for this email.\n* **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n* **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  * **messageId:** The message ID of the delivered email.\n  * **accepted:** Array of email addresses to which the email was successfully delivered.\n  * **rejected:** Array of email addresses to which the email could not be delivered.\n  * **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  * **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"82cf66d1051fe27b6e66eb9f8456beaecd0af4b21f46622c052bb3c2318847e4","createTime":"2020-09-01T17:11:44.817837Z","id":"0.1.5","releaseNotes":"feature - Update Cloud Functions runtime to Node.js 10.\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.6","ref":"firebase/firestore-send-email@0.1.6","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.6","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n- **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n- **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n- **to:** A single recipient email address or an array containing multiple recipient email addresses.\n- **toUids:** An array containing the recipient UIDs.\n- **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **ccUids:** An array containing the CC recipient UIDs.\n- **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **bccUids:** An array containing the BCC recipient UIDs.\n- **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n- **messageId:** A message ID header for the email, if any.\n- **subject:** The subject of the email.\n- **text:** The plaintext content of the email.\n- **html:** The HTML content of the email.\n- **amp:** The [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the _template name_ in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n- **subject:** A template string for the subject of the email.\n- **text:** A template string for the plaintext content of the email.\n- **html:** A template string for the HTML content of the email.\n- **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    toUids: [\"abc123\"],\n    template: {\n      name: \"following\",\n      data: {\n        username: \"ada\",\n        name: \"Ada Lovelace\",\n      },\n    },\n  });\n```\n\n#### Template Partials\n\nTemplates may be registered reusable [partials](https://handlebarsjs.com/guide/partials.html) by specifying `{partial: true}` in the document in the template collection. Each of the standard data fields (`subject`, `html`, `text`, and `amp`) will be defined as a partial used only in its own environment. For example, a partial called `footer` might have data like:\n\n```js\n{\n  partial: true,\n  html: \"<p>This mail was sent by ExampleApp, Inc. <a href='https://example.com/unsubscribe'>Unsubscribe</a></p>\",\n  text: \"This mail was sent by ExampleApp, Inc. Unsubscribe here: https://example.com/unsubscribe\"\n}\n```\n\nIn another template, the partial can be included by its name (document ID):\n\n```html\n<p>This is my main template content, but it will use a common footer.</p>\n\n{{> footer }}\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n- **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n- **startTime:** Timestamp when email processing began.\n- **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n- **error:** If there was an email delivery error, an error message will be populated here.\n- **attempts:** Number of delivery attempts for this email.\n- **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n- **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  - **messageId:** The message ID of the delivered email.\n  - **accepted:** Array of email addresses to which the email was successfully delivered.\n  - **rejected:** Array of email addresses to which the email could not be delivered.\n  - **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  - **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server that this extension can use to deliver email.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"a9e8bd5ca1c0075f25747d0cd2321f40751c432dc94c71845d7d9acd3cc51fbe","createTime":"2020-12-10T18:42:54.573694Z","id":"0.1.6","releaseNotes":"feature - adds support for Handlebars partials (#419)\n\nfeature - Add new Cloud Functions locations. For more information about locations and their pricing tiers, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.7","ref":"firebase/firestore-send-email@0.1.7","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.7","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server that this extension can use to deliver email.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n- **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n- **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n- **to:** A single recipient email address or an array containing multiple recipient email addresses.\n- **toUids:** An array containing the recipient UIDs.\n- **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **ccUids:** An array containing the CC recipient UIDs.\n- **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **bccUids:** An array containing the BCC recipient UIDs.\n- **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n- **messageId:** A message ID header for the email, if any.\n- **subject:** The subject of the email.\n- **text:** The plaintext content of the email.\n- **html:** The HTML content of the email.\n- **amp:** The [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the _template name_ in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n- **subject:** A template string for the subject of the email.\n- **text:** A template string for the plaintext content of the email.\n- **html:** A template string for the HTML content of the email.\n- **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    toUids: [\"abc123\"],\n    template: {\n      name: \"following\",\n      data: {\n        username: \"ada\",\n        name: \"Ada Lovelace\",\n      },\n    },\n  });\n```\n\n#### Template Partials\n\nTemplates may be registered reusable [partials](https://handlebarsjs.com/guide/partials.html) by specifying `{partial: true}` in the document in the template collection. Each of the standard data fields (`subject`, `html`, `text`, and `amp`) will be defined as a partial used only in its own environment. For example, a partial called `footer` might have data like:\n\n```js\n{\n  partial: true,\n  html: \"<p>This mail was sent by ExampleApp, Inc. <a href='https://example.com/unsubscribe'>Unsubscribe</a></p>\",\n  text: \"This mail was sent by ExampleApp, Inc. Unsubscribe here: https://example.com/unsubscribe\"\n}\n```\n\nIn another template, the partial can be included by its name (document ID):\n\n```html\n<p>This is my main template content, but it will use a common footer.</p>\n\n{{> footer }}\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n- **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n- **startTime:** Timestamp when email processing began.\n- **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n- **error:** If there was an email delivery error, an error message will be populated here.\n- **attempts:** Number of delivery attempts for this email.\n- **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n- **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  - **messageId:** The message ID of the delivered email.\n  - **accepted:** Array of email addresses to which the email was successfully delivered.\n  - **rejected:** Array of email addresses to which the email could not be delivered.\n  - **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  - **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server that this extension can use to deliver email.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"60fc94c65d2ca318320b8c1576af984996aff69e63141d268fcd29f5d09f3644","createTime":"2021-01-14T17:46:17.045351Z","id":"0.1.7","releaseNotes":"fixed - Switch from `console.log` to `functions.logger.log` for cleaner log outputs.\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.8","ref":"firebase/firestore-send-email@0.1.8","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.8","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n- **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n- **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n- **to:** A single recipient email address or an array containing multiple recipient email addresses.\n- **toUids:** An array containing the recipient UIDs.\n- **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **ccUids:** An array containing the CC recipient UIDs.\n- **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **bccUids:** An array containing the BCC recipient UIDs.\n- **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n- **messageId:** A message ID header for the email, if any.\n- **subject:** The subject of the email.\n- **text:** The plaintext content of the email.\n- **html:** The HTML content of the email.\n- **amp:** The [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the _template name_ in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n- **subject:** A template string for the subject of the email.\n- **text:** A template string for the plaintext content of the email.\n- **html:** A template string for the HTML content of the email.\n- **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\"\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    toUids: [\"abc123\"],\n    template: {\n      name: \"following\",\n      data: {\n        username: \"ada\",\n        name: \"Ada Lovelace\",\n      },\n    },\n  });\n```\n\n#### Template Partials\n\nTemplates may be registered reusable [partials](https://handlebarsjs.com/guide/partials.html) by specifying `{partial: true}` in the document in the template collection. Each of the standard data fields (`subject`, `html`, `text`, and `amp`) will be defined as a partial used only in its own environment. For example, a partial called `footer` might have data like:\n\n```js\n{\n  partial: true,\n  html: \"<p>This mail was sent by ExampleApp, Inc. <a href='https://example.com/unsubscribe'>Unsubscribe</a></p>\",\n  text: \"This mail was sent by ExampleApp, Inc. Unsubscribe here: https://example.com/unsubscribe\"\n}\n```\n\nIn another template, the partial can be included by its name (document ID):\n\n```html\n<p>This is my main template content, but it will use a common footer.</p>\n\n{{> footer }}\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n- **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n- **startTime:** Timestamp when email processing began.\n- **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n- **error:** If there was an email delivery error, an error message will be populated here.\n- **attempts:** Number of delivery attempts for this email.\n- **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n- **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  - **messageId:** The message ID of the delivered email.\n  - **accepted:** Array of email addresses to which the email was successfully delivered.\n  - **rejected:** Array of email addresses to which the email could not be delivered.\n  - **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  - **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"a0ea559be5c4a8c056865981985b643ec3e0f836850e25d06c9db235ecab7d8d","createTime":"2021-02-11T23:35:52.190066Z","id":"0.1.8","releaseNotes":"docs - updated \"SMTP connection URI\" parameter description to clarify which ports are recommended for SMTP connections (#582)\n"},{"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.9","ref":"firebase/firestore-send-email@0.1.9","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.9","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.","required":true,"example":"smtps://username:password@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+:[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port`."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nAfter its installation, this extension monitors all document writes to the `${param:MAIL_COLLECTION}` collection. Email is delivered based on the contents of the document's fields. The top-level fields specify the email's sender and recipients. The `message` field contains the details of the email to deliver, including the email body.\n\n#### Sender and recipient fields\n\nThe top-level fields of the document supply the email sender and recipient information. Available fields are:\n\n- **from:** The sender's email address. If not specified in the document, uses the configured \"Default FROM address\" parameter.\n- **replyTo:** The reply-to email address. If not specified in the document, uses the configured \"Default REPLY-TO address\" parameter.\n- **to:** A single recipient email address or an array containing multiple recipient email addresses.\n- **toUids:** An array containing the recipient UIDs.\n- **cc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **ccUids:** An array containing the CC recipient UIDs.\n- **bcc:** A single recipient email address or an array containing multiple recipient email addresses.\n- **bccUids:** An array containing the BCC recipient UIDs.\n- **headers:** An object of additional header fields (for example, `{\"X-Custom-Header\": \"value\", \"X-Second-Custom-Header\": \"value\"}`).\n\n**NOTE:** The `toUids`, `ccUids`, and `bccUids` options deliver emails based on user UIDs keyed to email addresses within a Cloud Firestore document. To use these recipient options, you need to specify a Cloud Firestore collection for the extension's \"Users collection\" parameter. The extension can then read the `email` field for each UID specified in the `toUids`, `ccUids`, and/or `bccUids` fields.\n\n#### Message field\n\nThe `message` field of the document contains raw delivery information for the email. This field should generally only be populated by trusted code running in your own servers or Cloud Functions (refer to the \"Security rules and sending email\" section below).\n\nAvailable properties for the `message` field are:\n\n- **messageId:** A message ID header for the email, if any.\n- **subject:** The subject of the email.\n- **text:** The plaintext content of the email.\n- **html:** The HTML content of the email.\n- **amp:** The [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array containing attachment(s); [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pregenerated MIME node (be aware that your email has no access to the cloud server's file system).\n\n#### Using templates\n\nIf you specified a \"Templates collection\" parameter during configuration of the extension, you can create and manage [Handlebars][handlebars] templates for your emails. Each document for a template should have a memorable ID that you use as the _template name_ in the document that's written to your `${param:MAIL_COLLECTION}` collection.\n\nThe template document can include any of the following fields:\n\n- **subject:** A template string for the subject of the email.\n- **text:** A template string for the plaintext content of the email.\n- **html:** A template string for the HTML content of the email.\n- **amp:** A template string for the [AMP4EMAIL][amp4email] content of the email.\n- **attachments:** An array of attachments with template strings as values; [Nodemailer options](https://nodemailer.com/message/attachments/) supported: utf-8 string, custom content type, URL, encoded string, data URI, and pre-generated MIME node (be aware that your email has no access to the cloud server's file system).\n\nAn example template might have an ID of `following` and content like:\n\n```js\n{\n  subject: \"@{{username}} is now following you!\",\n  html: \"Just writing to let you know that <code>@{{username}}</code> ({{name}}) is now following you.\",\n  attachments: [\n    {\n     filename: \"{{username}}.jpg\",\n     path: \"{{imagePath}}\" \n    }\n  ]\n}\n```\n\nTo deliver email using templates, when adding documents to your `${param:MAIL_COLLECTION}` collection, include a `template` field with `name` and `data` properties. For example, using our `following` template from above:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    toUids: [\"abc123\"],\n    template: {\n      name: \"following\",\n      data: {\n        username: \"ada\",\n        name: \"Ada Lovelace\",\n        imagePath: \"https://path-to-file/image-name.jpg\"\n      },\n    },\n  });\n```\n\n#### Template Partials\n\nTemplates may be registered reusable [partials](https://handlebarsjs.com/guide/partials.html) by specifying `{partial: true}` in the document in the template collection. Each of the standard data fields (`subject`, `html`, `text`, and `amp`) will be defined as a partial used only in its own environment. For example, a partial called `footer` might have data like:\n\n```js\n{\n  partial: true,\n  html: \"<p>This mail was sent by ExampleApp, Inc. <a href='https://example.com/unsubscribe'>Unsubscribe</a></p>\",\n  text: \"This mail was sent by ExampleApp, Inc. Unsubscribe here: https://example.com/unsubscribe\"\n}\n```\n\nIn another template, the partial can be included by its name (document ID):\n\n```html\n<p>This is my main template content, but it will use a common footer.</p>\n\n{{> footer }}\n```\n\n#### Security rules and sending email\n\nThis extension can be used to trigger email delivery directly from client applications. However, you should carefully control client access to the `${param:MAIL_COLLECTION}` collection to avoid potential abuse (you don't want users able to send arbitrary emails from your company's address!).\n\nSecurity rules will vary from application to application, but you should always make sure that emails are sent only to intended recipients and free-form content is kept to a minimum. Templates can help here -- you can use security rules to verify that the data being populated to the template matches your expectations for what a user should be allowed to trigger.\n\n#### Email delivery processing\n\nWhen a document is added to the `${param:MAIL_COLLECTION}` collection, the extension picks it up for email delivery processing. The extension creates and updates a `delivery` field in the document as it processes the email. The `delivery` field can be populated with the following fields:\n\n- **state:** One of `PENDING`, `PROCESSING`, `SUCCESS`, or `ERROR`.\n- **startTime:** Timestamp when email processing began.\n- **endTime:** Timestamp when email processing completed (that is, ended in either a `SUCCESS` or `ERROR` state).\n- **error:** If there was an email delivery error, an error message will be populated here.\n- **attempts:** Number of delivery attempts for this email.\n- **leaseExpireTime:** In case of a hang or timeout, the time at which a `PROCESSING` state should be considered an error.\n- **info:** After successful email delivery (to at least one address), this field will be populated with the following fields:\n  - **messageId:** The message ID of the delivered email.\n  - **accepted:** Array of email addresses to which the email was successfully delivered.\n  - **rejected:** Array of email addresses to which the email could not be delivered.\n  - **pending:** Array of email addresses that were temporarily rejected by SMTP.\n  - **response:** The last response from the SMTP server.\n\nAn email will typically go from `PENDING` to `PROCESSING` to either `SUCCESS` or `ERROR`. Once in the `SUCCESS` or `ERROR` state, additional changes to the document will not trigger the extension to send another email. To resend an email with document updates, you can change the `state` to `PENDING` or `RETRY`.\n\n#### Manual retries\n\nThere are instances in which email delivery fails in a recoverable fashion or the document can be manually corrected for proper delivery with minor modifications. While retries are not automatic, you can manually change the `state` in the `delivery` field to `RETRY` so that the extension attempts email delivery again (and increments the number of `attempts`).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"5087460006e7892c7fd353382e05fce7eb4f6b2ca7e1063fb1132990e770dc05","createTime":"2021-03-04T17:50:06.051323Z","id":"0.1.9","releaseNotes":"feature - Allow attachments within template records to be interpolated with data values passed into a new record in the mail collection. (#519)\n"}]}
[debug] [2023-04-11T11:42:03.982Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions/0.1.25 [none]
[debug] [2023-04-11T11:42:05.003Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions/0.1.25 200
[debug] [2023-04-11T11:42:05.004Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions/0.1.25 {"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.25","ref":"firebase/firestore-send-email@0.1.25","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.25","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://.*?:[0-9]+.*$)","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."},{"param":"TTL_EXPIRE_TYPE","label":"Firestore TTL type","type":"SELECT","description":"Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".","required":true,"options":[{"value":"never","label":"Never"},{"value":"hour","label":"Hour"},{"value":"day","label":"Day"},{"value":"week","label":"Week"},{"value":"month","label":"Month"},{"value":"year","label":"Year"}],"default":"never"},{"param":"TTL_EXPIRE_VALUE","label":"Firestore TTL value","type":"STRING","description":"In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.","required":true,"default":"1","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"The value must be an integer value greater than zero."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email from Firestore Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","readmeContent":"# Trigger Email from Firestore\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Setup Google App Passwords\n\n**Google** no longer allows **Gmail** users to use their own passwords to authorize third-party apps and services. Instead, you have to use the [Sign in with App Passwords](https://support.google.com/accounts/answer/185833) service to generate a special password for each app you want to authorize. To do so:\n\n1.  Go to your [Google Account](https://myaccount.google.com/).\n2.  Select **Security**.\n3.  Under \"Signing in to Google,\" select **App Passwords**. You may need to sign in. If you don’t have this option, it might be because:\n    1.  2-Step Verification is not set up for your account.\n    2.  2-Step Verification is only set up for security keys.\n    3.  Your account is through work, school, or other organization.\n    4.  You turned on Advanced Protection.\n4.  At the bottom, choose **Select app** and choose **Other** option and then write the name of the app password (e.g. `Firebase Trigger Email from Firestore Extension`) and click **Generate**.\n5.  Follow the instructions to enter the App Password. The App Password is the 16-character code in the yellow bar on your device.\n6.  Tap **Done**.\n\nNow you can use your Google username with the generated password to authorize the extension.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n* Firestore TTL type: Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".\n\n* Firestore TTL value: In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email from Firestore","events":[{"type":"firebase.extensions.firestore-send-email.v1.onStart","description":"Occurs when the extension starts execution."},{"type":"firebase.extensions.firestore-send-email.v1.onProcessing","description":"Occurs when the extension attempts to process an email."},{"type":"firebase.extensions.firestore-send-email.v1.onRetry","description":"Occurs when the extension attempts to resend an email."},{"type":"firebase.extensions.firestore-send-email.v1.onPending","description":"Occurs when an email has a pending status."},{"type":"firebase.extensions.firestore-send-email.v1.onSuccess","description":"Occurs when the extension successfully sends an email."},{"type":"firebase.extensions.firestore-send-email.v1.onComplete","description":"Occurs when the extension completes execution."},{"type":"firebase.extensions.firestore-send-email.v1.onError","description":"Occurs when the extension fails to complete execution."}]},"state":"PUBLISHED","hash":"8790ec65165d9a18afedde0428416e26d35f422d5a1b714720305d63fc650859","createTime":"2023-04-05T14:33:07.327071Z","sourceDownloadUri":"https://storage.googleapis.com/firebase-mod-sources-prod/8790ec65165d9a18afedde0428416e26d35f422d5a1b714720305d63fc650859","id":"0.1.25","releaseNotes":"fixed - change missingDeliveryField logging from `error` to `warn`\n"}
[debug] [2023-04-11T11:42:05.008Z] [extensions] Source code valid for firebase/firestore-send-email@0.1.25
[debug] [2023-04-11T11:42:05.009Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email [none]
[debug] [2023-04-11T11:42:05.670Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email 200
[debug] [2023-04-11T11:42:05.671Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email {"name":"publishers/firebase/extensions/firestore-send-email","ref":"firebase/firestore-send-email","latestVersion":"0.1.25","latestVersionCreateTime":"2023-04-05T14:33:07.327071Z","state":"PUBLISHED","createTime":"2021-03-18T22:02:59.748671Z","visibility":"PUBLIC","registryLaunchStage":"BETA","iconUri":"https://storage.googleapis.com/firebase-extensions-icons/extension_icons/firebase/trigger_email_120@2x.png","publisher":{"displayName":"Firebase","iconUri":"https://storage.googleapis.com/firebase-extensions-icons/publisher_icons/firebase/firebase_128dp.png"}}
[debug] [2023-04-11T11:42:06.831Z] [functions] Functions Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-04-11T11:42:06.832Z] [eventarc] Eventarc Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-04-11T11:42:06.832Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-04-11T11:42:06.832Z] [auth] Authentication Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-04-11T11:42:06.832Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-04-11T11:42:06.832Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-04-11T11:42:06.832Z] [hosting] Hosting Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-04-11T11:42:06.832Z] assigned listening specs for emulators {"user":{"functions":[{"address":"127.0.0.1","family":"IPv4","port":5001}],"eventarc":[{"address":"127.0.0.1","family":"IPv4","port":9299}],"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000},{"address":"::1","family":"IPv6","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"auth":[{"address":"127.0.0.1","family":"IPv4","port":9099}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"hosting":[{"address":"127.0.0.1","family":"IPv4","port":5000}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2023-04-11T11:42:06.843Z] [hub] writing locator at /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/hub-tickety-85fd7.json
[debug] [2023-04-11T11:42:06.847Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 [none]
[debug] [2023-04-11T11:42:07.079Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 200
[debug] [2023-04-11T11:42:07.079Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7 {"projectId":"tickety-85fd7","projectNumber":"276533721536","displayName":"Tickety","name":"projects/tickety-85fd7","resources":{"hostingSite":"tickety-85fd7","storageBucket":"tickety-85fd7.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_50fc1457-be1a-4b1c-b1dd-c73d7a5dcf80"}
[debug] [2023-04-11T11:42:09.641Z] >>> [apiv2][query] GET https://firebasehosting.googleapis.com/v1beta1/projects/tickety-85fd7/sites pageToken=&pageSize=10
[debug] [2023-04-11T11:42:10.521Z] <<< [apiv2][status] GET https://firebasehosting.googleapis.com/v1beta1/projects/tickety-85fd7/sites 200
[debug] [2023-04-11T11:42:10.521Z] <<< [apiv2][body] GET https://firebasehosting.googleapis.com/v1beta1/projects/tickety-85fd7/sites {"sites":[{"name":"projects/tickety-85fd7/sites/tickety-85fd7","defaultUrl":"https://tickety-85fd7.web.app","appId":"1:276533721536:web:cef5f50a8f5a641f0e3025","type":"DEFAULT_SITE"}]}
[debug] [2023-04-11T11:42:10.522Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/-/webApps/1:276533721536:web:cef5f50a8f5a641f0e3025/config [none]
[debug] [2023-04-11T11:42:11.376Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/-/webApps/1:276533721536:web:cef5f50a8f5a641f0e3025/config 200
[debug] [2023-04-11T11:42:11.376Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/-/webApps/1:276533721536:web:cef5f50a8f5a641f0e3025/config {"projectId":"tickety-85fd7","appId":"1:276533721536:web:cef5f50a8f5a641f0e3025","storageBucket":"tickety-85fd7.appspot.com","locationId":"us-central","apiKey":"AIzaSyAs-PLLtBdh0iZ0BAifDmRekZA8m7VU3gc","authDomain":"tickety-85fd7.firebaseapp.com","messagingSenderId":"276533721536","measurementId":"G-7T221XZYRJ"}
[debug] [2023-04-11T11:42:37.247Z] [Extensions] Started Extensions emulator, this is a noop.
[warn] ⚠  functions: The following emulators are not running, calls to these services from the Functions emulator will affect production: database, pubsub, storage {"metadata":{"emulator":{"name":"functions"},"message":"The following emulators are not running, calls to these services from the Functions emulator will affect production: \u001b[1mdatabase, pubsub, storage\u001b[22m"}}
[warn] ⚠  Your requested "node" version "14" doesn't match your global version "16". Using node@16 from host. {"metadata":{"emulator":{"name":"functions"},"message":"Your requested \"node\" version \"14\" doesn't match your global version \"16\". Using node@16 from host."}}
[info] ✔  functions: Using node@16 from host. {"metadata":{"emulator":{"name":"functions"},"message":"Using node@16 from host."}}
[info] ✔  functions: Using node@16 from host. {"metadata":{"emulator":{"name":"functions"},"message":"Using node@16 from host."}}
[debug] [2023-04-11T11:42:37.415Z] defaultcredentials: writing to file /Users/tristanvarewijck/.config/firebase/tristan_varewijck_gmail.com_application_default_credentials.json
[debug] [2023-04-11T11:42:37.517Z] Setting GAC to /Users/tristanvarewijck/.config/firebase/tristan_varewijck_gmail.com_application_default_credentials.json {"metadata":{"emulator":{"name":"functions"},"message":"Setting GAC to /Users/tristanvarewijck/.config/firebase/tristan_varewijck_gmail.com_application_default_credentials.json"}}
[debug] [2023-04-11T11:42:37.518Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/adminSdkConfig [none]
[debug] [2023-04-11T11:42:37.774Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/adminSdkConfig 200
[debug] [2023-04-11T11:42:37.774Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/adminSdkConfig {"projectId":"tickety-85fd7","storageBucket":"tickety-85fd7.appspot.com","locationId":"us-central"}
[debug] [2023-04-11T11:42:37.811Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-04-11T11:42:37.811Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-04-11T11:42:37.811Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/Users/tristanvarewijck/.cache/firebase/emulators/cloud-firestore-emulator-v1.15.1.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","tickety-85fd7","--rules","/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/firestore.rules","--single_project_mode",true,"--functions_emulator","127.0.0.1:5001"],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/Users/tristanvarewijck/.cache/firebase/emulators/cloud-firestore-emulator-v1.15.1.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"tickety-85fd7\",\"--rules\",\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/firestore.rules\",\"--single_project_mode\",true,\"--functions_emulator\",\"127.0.0.1:5001\"],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[debug] [2023-04-11T11:42:39.932Z] Apr 11, 2023 1:42:39 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:42:39 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2023-04-11T11:42:39.986Z] API endpoint: http:// {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://"}}
[debug] [2023-04-11T11:42:39.987Z] 127.0.0.1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080"}}
[debug] [2023-04-11T11:42:39.987Z] 
 {"metadata":{"emulator":{"name":"firestore"},"message":"\n"}}
[debug] [2023-04-11T11:42:39.988Z] If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:
 {"metadata":{"emulator":{"name":"firestore"},"message":"If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n"}}
[debug] [2023-04-11T11:42:39.988Z] 
   export FIRESTORE_EMULATOR_HOST= {"metadata":{"emulator":{"name":"firestore"},"message":"\n   export FIRESTORE_EMULATOR_HOST="}}
[debug] [2023-04-11T11:42:39.989Z] 127.0.0.1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080"}}
[debug] [2023-04-11T11:42:39.989Z] 

 {"metadata":{"emulator":{"name":"firestore"},"message":"\n\n"}}
[debug] [2023-04-11T11:42:39.989Z] Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2023-04-11T11:42:48.489Z] >>> [apiv2][query] GET https://firebasehosting.googleapis.com/v1beta1/projects/tickety-85fd7/sites 
[debug] [2023-04-11T11:42:49.307Z] <<< [apiv2][status] GET https://firebasehosting.googleapis.com/v1beta1/projects/tickety-85fd7/sites 200
[debug] [2023-04-11T11:42:49.307Z] <<< [apiv2][body] GET https://firebasehosting.googleapis.com/v1beta1/projects/tickety-85fd7/sites {"sites":[{"name":"projects/tickety-85fd7/sites/tickety-85fd7","defaultUrl":"https://tickety-85fd7.web.app","appId":"1:276533721536:web:cef5f50a8f5a641f0e3025","type":"DEFAULT_SITE"}]}
[debug] [2023-04-11T11:42:49.307Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/webApps/1:276533721536:web:cef5f50a8f5a641f0e3025/config [none]
[debug] [2023-04-11T11:42:50.088Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/webApps/1:276533721536:web:cef5f50a8f5a641f0e3025/config 200
[debug] [2023-04-11T11:42:50.088Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/tickety-85fd7/webApps/1:276533721536:web:cef5f50a8f5a641f0e3025/config {"projectId":"tickety-85fd7","appId":"1:276533721536:web:cef5f50a8f5a641f0e3025","storageBucket":"tickety-85fd7.appspot.com","locationId":"us-central","apiKey":"AIzaSyAs-PLLtBdh0iZ0BAifDmRekZA8m7VU3gc","authDomain":"tickety-85fd7.firebaseapp.com","messagingSenderId":"276533721536","measurementId":"G-7T221XZYRJ"}
[info] i  hosting[tickety-85fd7]: Serving hosting files from: public {"metadata":{"emulator":{"name":"hosting"},"message":"Serving hosting files from: \u001b[1mpublic\u001b[22m"}}
[info] ✔  hosting[tickety-85fd7]: Local server: http://127.0.0.1:5000 {"metadata":{"emulator":{"name":"hosting"},"message":"Local server: \u001b[4m\u001b[1mhttp://127.0.0.1:5000\u001b[22m\u001b[24m"}}
[debug] [2023-04-11T11:42:50.245Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-04-11T11:42:50.246Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-04-11T11:42:50.246Z] Starting Emulator UI with command {"binary":"node","args":["/Users/tristanvarewijck/.cache/firebase/emulators/ui-v1.11.1/server/server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"/Users/tristanvarewijck/.cache/firebase/emulators/ui-v1.11.1/server/server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-04-11T11:42:50.416Z] Web / API server started at 127.0.0.1:4000
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:4000\n"}}
[debug] [2023-04-11T11:42:50.416Z] Web / API server started at ::1:4000
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at ::1:4000\n"}}
[debug] [2023-04-11T11:42:50.524Z] [Extensions] Connecting Extensions emulator, this is a noop.
[info] i  functions: Watching "/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions\" for Cloud Functions..."}}
[info] ✔  functions: Loaded functions definitions from source: processQueue. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: processQueue."}}
[debug] [2023-04-11T11:42:50.527Z] addFirestoreTrigger "{\"eventTrigger\":{\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/{id}\",\"service\":\"firestore.googleapis.com\"}}"
[debug] [2023-04-11T11:42:50.528Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 [none]
[debug] [2023-04-11T11:42:50.528Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 "{\"eventTrigger\":{\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/{id}\",\"service\":\"firestore.googleapis.com\"}}"
[debug] [2023-04-11T11:42:50.541Z] Apr 11, 2023 1:42:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:42:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:42:50.804Z] Apr 11, 2023 1:42:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:42:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:42:51.424Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 200
[debug] [2023-04-11T11:42:51.424Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 {}
[info] ✔  functions[us-central1-ext-firestore-send-email-processQueue]: firestore function initialized. {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mfirestore\u001b[22m function initialized."}}
[info] i  functions: Watching "/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\" for Cloud Functions..."}}
[debug] [2023-04-11T11:42:51.429Z] Validating nodejs source
[debug] [2023-04-11T11:42:53.738Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T11:42:53.820Z] Building nodejs source
[debug] [2023-04-11T11:42:53.820Z] Analyzing nodejs backend spec
[debug] [2023-04-11T11:42:53.825Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T11:42:53.919Z] Apr 11, 2023 1:42:53 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:42:53 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2023-04-11T11:42:54.296Z] Serving at port 9006

[debug] [2023-04-11T11:42:55.075Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T11:42:55.084Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[info] ✔  functions[us-central1-crawlWithPuppeteer]: http function initialized (http://127.0.0.1:5001/tickety-85fd7/us-central1/crawlWithPuppeteer). {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mhttp\u001b[22m function initialized (http://127.0.0.1:5001/tickety-85fd7/us-central1/crawlWithPuppeteer)."}}
[debug] [2023-04-11T11:42:55.098Z] addAuthTrigger {"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","resource":"projects/tickety-85fd7"}}
[info] ✔  functions[us-central1-onCreateUser]: auth function initialized. {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mauth\u001b[22m function initialized."}}
[debug] [2023-04-11T11:42:55.098Z] addFirestoreTrigger "{\"eventTrigger\":{\"eventType\":\"providers/cloud.firestore/eventTypes/document.update\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/users/{userId}\",\"service\":\"firestore.googleapis.com\"}}"
[debug] [2023-04-11T11:42:55.098Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 [none]
[debug] [2023-04-11T11:42:55.098Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 "{\"eventTrigger\":{\"eventType\":\"providers/cloud.firestore/eventTypes/document.update\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/users/{userId}\",\"service\":\"firestore.googleapis.com\"}}"
[debug] [2023-04-11T11:42:55.105Z] Apr 11, 2023 1:42:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:42:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:42:55.133Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 200
[debug] [2023-04-11T11:42:55.133Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 {}
[info] ✔  functions[us-central1-updateAdminCustomClaim]: firestore function initialized. {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mfirestore\u001b[22m function initialized."}}
[info] i  functions: Watching "/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/.firebase/tickety-85fd7/functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/.firebase/tickety-85fd7/functions\" for Cloud Functions..."}}
[debug] [2023-04-11T11:42:55.144Z] Validating nodejs source
[warn] ⚠  functions: package.json indicates an outdated version of firebase-functions. Please upgrade using npm install --save firebase-functions@latest in your functions directory. 
[warn] ⚠  functions: Please note that there will be breaking changes when you upgrade. 
[debug] [2023-04-11T11:42:56.626Z] > [functions] package.json contents: {
  "main": "server.js",
  "dependencies": {
    "firebase-frameworks": "^0.6.0",
    "firebase-functions": "^3.23.0",
    "firebase-admin": "^11.0.1"
  },
  "engines": {
    "node": "16"
  }
}
[debug] [2023-04-11T11:42:56.626Z] Building nodejs source
[debug] [2023-04-11T11:42:56.626Z] Analyzing nodejs backend spec
[debug] [2023-04-11T11:42:56.696Z] Found functions.yaml. Got spec: {
  "endpoints": {
    "ssrtickety85fd7": {
      "platform": "gcfv2",
      "region": [
        "us-central1"
      ],
      "labels": {},
      "httpsTrigger": {},
      "entryPoint": "ssr"
    }
  },
  "specVersion": "v1alpha1",
  "requiredAPIs": []
}
[info] ✔  functions: Loaded functions definitions from source: ssr. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: ssr."}}
[info] ✔  functions[us-central1-ssrtickety85fd7]: http function initialized (http://127.0.0.1:5001/tickety-85fd7/us-central1/ssrtickety85fd7). {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mhttp\u001b[22m function initialized (http://127.0.0.1:5001/tickety-85fd7/us-central1/ssrtickety85fd7)."}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬──────────────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI              │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Authentication │ 127.0.0.1:9099 │ http://127.0.0.1:4000/auth       │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Functions      │ 127.0.0.1:5001 │ http://127.0.0.1:4000/functions  │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Firestore      │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore  │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Hosting        │ 127.0.0.1:5000 │ n/a                              │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Extensions     │ 127.0.0.1:5001 │ http://127.0.0.1:4000/extensions │
└────────────────┴────────────────┴──────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150
┌─────────────────────────┬──────────────────────────────────────┬───────────────────────────────────────────────────────┐
│ Extension Instance Name │ Extension Ref                        │ View in Emulator UI                                   │
├─────────────────────────┼──────────────────────────────────────┼───────────────────────────────────────────────────────┤
│ firestore-send-email    │ firebase/firestore-send-email@0.1.25 │ http://127.0.0.1:4000/extensions/firestore-send-email │
└─────────────────────────┴──────────────────────────────────────┴───────────────────────────────────────────────────────┘
Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2023-04-11T11:43:18.312Z] Apr 11, 2023 1:43:18 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:18 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[debug] [2023-04-11T11:43:18.669Z] Apr 11, 2023 1:43:18 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:18 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2023-04-11T11:43:36.880Z] Apr 11, 2023 1:43:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:43:57.123Z] Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:43:57.255Z] Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:43:57.265Z] Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:43:57.591Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T11:43:57.591Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T11:43:57.592Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T11:43:57.596Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T11:43:57.597Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T11:43:57.614Z] [worker-pool] addWorker(us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:43:57.615Z] [worker-pool] Adding worker with key us-central1-ext-firestore-send-email-processQueue, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-ext-firestore-send-email-processQueue, total=1"}}
[debug] [2023-04-11T11:43:57.707Z] Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:43:57.869Z] Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:43:57.966Z] Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:43:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:44:00.275Z] [runtime-status] [2708] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T11:44:00.277Z] [runtime-status] [2708] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T11:44:00.278Z] [runtime-status] [2708] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T11:44:00.279Z] [runtime-status] [2708] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T11:44:00.777Z] [runtime-status] [2708] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T11:44:00.778Z] [runtime-status] [2708] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T11:44:00.778Z] [runtime-status] [2708] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T11:44:00.779Z] [runtime-status] [2708] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T11:44:00.782Z] [runtime-status] [2708] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T11:44:00.782Z] [runtime-status] [2708] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Initializing extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Initializing extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Initializing extension with configuration\"}"}}
[debug] [2023-04-11T11:44:00.922Z] [runtime-status] [2708] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/.cache/firebase/extensions/firebase/firestore-send-email@0.1.25/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T11:44:00.922Z] [runtime-status] [2708] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_fd5bf3dd85025a75.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_fd5bf3dd85025a75.sock"}}
[debug] [2023-04-11T11:44:01.026Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:44:01.026Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:44:01.027Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T11:44:01.047Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T11:44:01.048Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M","fields":{"to":{"stringValue":"tristanconnect@gmail.com"}},"createTime":"2023-04-11T11:43:57.430239Z","updateTime":"2023-04-11T11:43:57.430239Z"},"updateMask":{}},"context":{"eventId":"49755dd6-dc58-438f-bf00-db80d1faa401","timestamp":"2023-04-11T11:43:57.430Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\",\"fields\":{\"to\":{\"stringValue\":\"tristanconnect@gmail.com\"}},\"createTime\":\"2023-04-11T11:43:57.430239Z\",\"updateTime\":\"2023-04-11T11:43:57.430239Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"49755dd6-dc58-438f-bf00-db80d1faa401\",\"timestamp\":\"2023-04-11T11:43:57.430Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\"}}"}}
[debug] [2023-04-11T11:44:01.053Z] [runtime-status] [2708] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[debug] [2023-04-11T11:44:01.701Z] Apr 11, 2023 1:44:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[info] >  {"severity":"WARNING","message":"message 'undefined' is not a valid object and no handlebars template has been provided instead - please add as an object or firestore map, otherwise you may experience unexpected results."} {"user":{"severity":"WARNING","message":"message 'undefined' is not a valid object and no handlebars template has been provided instead - please add as an object or firestore map, otherwise you may experience unexpected results."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"message 'undefined' is not a valid object and no handlebars template has been provided instead - please add as an object or firestore map, otherwise you may experience unexpected results.\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T11:44:01.764Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:44:01.764Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 716.067524ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 716.067524ms"}}
[debug] [2023-04-11T11:44:03.715Z] Apr 11, 2023 1:44:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:44:03.750Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T11:44:03.750Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T11:44:03.750Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T11:44:03.753Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T11:44:03.753Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T11:44:03.753Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:44:03.753Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T11:44:03.763Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T11:44:03.763Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M","createTime":"2023-04-11T11:43:57.430239Z","updateTime":"2023-04-11T11:44:03.734491Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M","fields":{"to":{"stringValue":"tristanconnect@gmail.com"}},"createTime":"2023-04-11T11:43:57.430239Z","updateTime":"2023-04-11T11:43:57.430239Z"},"updateMask":{}},"context":{"eventId":"8fe48bb1-4943-4c1c-a5e4-69effc633e89","timestamp":"2023-04-11T11:44:03.734Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\",\"createTime\":\"2023-04-11T11:43:57.430239Z\",\"updateTime\":\"2023-04-11T11:44:03.734491Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\",\"fields\":{\"to\":{\"stringValue\":\"tristanconnect@gmail.com\"}},\"createTime\":\"2023-04-11T11:43:57.430239Z\",\"updateTime\":\"2023-04-11T11:43:57.430239Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"8fe48bb1-4943-4c1c-a5e4-69effc633e89\",\"timestamp\":\"2023-04-11T11:44:03.734Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"WARNING","message":"message 'undefined' is not a valid object and no handlebars template has been provided instead - please add as an object or firestore map, otherwise you may experience unexpected results."} {"user":{"severity":"WARNING","message":"message 'undefined' is not a valid object and no handlebars template has been provided instead - please add as an object or firestore map, otherwise you may experience unexpected results."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"message 'undefined' is not a valid object and no handlebars template has been provided instead - please add as an object or firestore map, otherwise you may experience unexpected results.\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T11:44:03.802Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:44:03.803Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 37.874048ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 37.874048ms"}}
[debug] [2023-04-11T11:44:12.839Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T11:44:12.839Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T11:44:12.839Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T11:44:12.846Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T11:44:12.846Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T11:44:12.846Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:44:12.847Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T11:44:12.856Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T11:44:12.856Z] [runtime-status] [2708] RunBackground {"data":{"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M","createTime":"2023-04-11T11:43:57.430239Z","updateTime":"2023-04-11T11:44:03.734491Z"},"updateMask":{}},"context":{"eventId":"2f451962-5cb4-4034-819a-18b000188873","timestamp":"2023-04-11T11:44:12.829Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\",\"createTime\":\"2023-04-11T11:43:57.430239Z\",\"updateTime\":\"2023-04-11T11:44:03.734491Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"2f451962-5cb4-4034-819a-18b000188873\",\"timestamp\":\"2023-04-11T11:44:12.829Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/y4bO8H7mKpajQfPyPe0M\"}}"}}
[info] >  {"severity":"WARNING","message":"Snapshot has no readTime. Using now()"} {"user":{"severity":"WARNING","message":"Snapshot has no readTime. Using now()"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"Snapshot has no readTime. Using now()\"}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T11:44:12.906Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:44:12.906Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 53.013261ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 53.013261ms"}}
[debug] [2023-04-11T11:44:21.795Z] Apr 11, 2023 1:44:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:44:21.836Z] Apr 11, 2023 1:44:21 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
Apr 11, 2023 1:44:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:21 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\nApr 11, 2023 1:44:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:44:22.038Z] Apr 11, 2023 1:44:22 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:22 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2023-04-11T11:44:22.115Z] Apr 11, 2023 1:44:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:44:22.179Z] Apr 11, 2023 1:44:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:44:25.381Z] Apr 11, 2023 1:44:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:44:25.453Z] Apr 11, 2023 1:44:25 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:25 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[debug] [2023-04-11T11:44:25.639Z] Apr 11, 2023 1:44:25 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:44:25 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2023-04-11T11:45:32.166Z] Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:45:32.180Z] Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:45:32.190Z] Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:45:32.210Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T11:45:32.210Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T11:45:32.210Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T11:45:32.215Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T11:45:32.215Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T11:45:32.215Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:45:32.215Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T11:45:32.223Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T11:45:32.224Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:32.198496Z"},"updateMask":{}},"context":{"eventId":"742b63b5-24dc-428d-aa8d-5e6efd0ab433","timestamp":"2023-04-11T11:45:32.198Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:32.198496Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"742b63b5-24dc-428d-aa8d-5e6efd0ab433\",\"timestamp\":\"2023-04-11T11:45:32.198Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[debug] [2023-04-11T11:45:32.258Z] Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[info] >  {"severity":"WARNING","message":"message=mail/GF0sOyUQhuQuLsolLLjt is missing 'delivery' field"} {"user":{"severity":"WARNING","message":"message=mail/GF0sOyUQhuQuLsolLLjt is missing 'delivery' field"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"message=mail/GF0sOyUQhuQuLsolLLjt is missing 'delivery' field\"}"}}
[debug] [2023-04-11T11:45:32.341Z] Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T11:45:32.413Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:45:32.413Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 192.175528ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 192.175528ms"}}
[debug] [2023-04-11T11:45:32.416Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T11:45:32.416Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T11:45:32.416Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T11:45:32.419Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T11:45:32.419Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T11:45:32.419Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:45:32.420Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T11:45:32.423Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T11:45:32.424Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T11:45:32.325Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:32.356845Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:32.198496Z"},"updateMask":{}},"context":{"eventId":"50b0e0e8-08e6-4e15-9621-60f8245e13fc","timestamp":"2023-04-11T11:45:32.356Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T11:45:32.325Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:32.356845Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:32.198496Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"50b0e0e8-08e6-4e15-9621-60f8245e13fc\",\"timestamp\":\"2023-04-11T11:45:32.356Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[debug] [2023-04-11T11:45:32.444Z] Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:45:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[info] >  {"severity":"INFO","message":"Attempting delivery for message: mail/GF0sOyUQhuQuLsolLLjt"} {"user":{"severity":"INFO","message":"Attempting delivery for message: mail/GF0sOyUQhuQuLsolLLjt"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Attempting delivery for message: mail/GF0sOyUQhuQuLsolLLjt\"}"}}
[info] >  {"severity":"INFO","message":"Delivered message: mail/GF0sOyUQhuQuLsolLLjt successfully. messageId: <9c8f1679-1aea-b4cc-4f8d-a7bb2fe57760@gmail.com> accepted: 1 rejected: 0 pending: 0"} {"user":{"severity":"INFO","message":"Delivered message: mail/GF0sOyUQhuQuLsolLLjt successfully. messageId: <9c8f1679-1aea-b4cc-4f8d-a7bb2fe57760@gmail.com> accepted: 1 rejected: 0 pending: 0"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Delivered message: mail/GF0sOyUQhuQuLsolLLjt successfully. messageId: <9c8f1679-1aea-b4cc-4f8d-a7bb2fe57760@gmail.com> accepted: 1 rejected: 0 pending: 0\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T11:45:33.708Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:45:33.708Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 1285.2323470000001ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 1285.2323470000001ms"}}
[debug] [2023-04-11T11:45:33.717Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T11:45:33.717Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T11:45:33.717Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T11:45:33.719Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T11:45:33.720Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T11:45:33.720Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:45:33.720Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T11:45:33.726Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T11:45:33.726Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T11:45:32.325Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T11:46:32.463Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:32.468235Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T11:45:32.325Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:32.356845Z"},"updateMask":{}},"context":{"eventId":"4878c808-75ab-40a5-b594-9f80d7d7e7d5","timestamp":"2023-04-11T11:45:32.468Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T11:45:32.325Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T11:46:32.463Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:32.468235Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T11:45:32.325Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:32.356845Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"4878c808-75ab-40a5-b594-9f80d7d7e7d5\",\"timestamp\":\"2023-04-11T11:45:32.468Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T11:45:33.750Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:45:33.750Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 25.156493ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 25.156493ms"}}
[debug] [2023-04-11T11:45:33.753Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T11:45:33.753Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T11:45:33.753Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T11:45:33.756Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T11:45:33.756Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T11:45:33.757Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T11:45:33.757Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T11:45:33.759Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T11:45:33.759Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T11:45:32.325Z"},"error":{"nullValue":null},"leaseExpireTime":{"nullValue":null},"state":{"stringValue":"SUCCESS"},"info":{"mapValue":{"fields":{"rejected":{"arrayValue":{}},"response":{"stringValue":"250 Ok: queued as 545e-KzoRsaUD-vLs-b6qg"},"pending":{"arrayValue":{}},"messageId":{"stringValue":"<9c8f1679-1aea-b4cc-4f8d-a7bb2fe57760@gmail.com>"},"accepted":{"arrayValue":{"values":[{"stringValue":"tristan.varewijck@gmail.com"}]}}}}},"endTime":{"timestampValue":"2023-04-11T11:45:33.669Z"},"attempts":{"integerValue":"1"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:33.682814Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T11:45:32.325Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T11:46:32.463Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:32.468235Z"},"updateMask":{}},"context":{"eventId":"6747532e-5288-4e88-8a17-bc06fd86d2ac","timestamp":"2023-04-11T11:45:33.682Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T11:45:32.325Z\"},\"error\":{\"nullValue\":null},\"leaseExpireTime\":{\"nullValue\":null},\"state\":{\"stringValue\":\"SUCCESS\"},\"info\":{\"mapValue\":{\"fields\":{\"rejected\":{\"arrayValue\":{}},\"response\":{\"stringValue\":\"250 Ok: queued as 545e-KzoRsaUD-vLs-b6qg\"},\"pending\":{\"arrayValue\":{}},\"messageId\":{\"stringValue\":\"<9c8f1679-1aea-b4cc-4f8d-a7bb2fe57760@gmail.com>\"},\"accepted\":{\"arrayValue\":{\"values\":[{\"stringValue\":\"tristan.varewijck@gmail.com\"}]}}}}},\"endTime\":{\"timestampValue\":\"2023-04-11T11:45:33.669Z\"},\"attempts\":{\"integerValue\":\"1\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:33.682814Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T11:45:32.325Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T11:46:32.463Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:32.468235Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"6747532e-5288-4e88-8a17-bc06fd86d2ac\",\"timestamp\":\"2023-04-11T11:45:33.682Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T11:45:33.761Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T11:45:33.761Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 1.695779ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 1.695779ms"}}
[debug] [2023-04-11T11:46:32.226Z] Apr 11, 2023 1:46:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:46:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:46:33.479Z] Apr 11, 2023 1:46:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:46:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:46:33.483Z] Apr 11, 2023 1:46:33 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:46:33 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T11:46:33.715Z] Apr 11, 2023 1:46:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:46:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:47:49.154Z] Apr 11, 2023 1:47:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:47:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:48:49.173Z] Apr 11, 2023 1:48:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:48:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:49:46.526Z] Apr 11, 2023 1:49:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 1:49:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:49:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 1:49:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:49:49.193Z] Apr 11, 2023 1:49:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:49:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:50:35.149Z] Apr 11, 2023 1:50:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:50:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:51:35.166Z] Apr 11, 2023 1:51:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:51:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:52:35.180Z] Apr 11, 2023 1:52:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:52:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:53:35.192Z] Apr 11, 2023 1:53:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:53:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T11:54:32.692Z] Apr 11, 2023 1:54:32 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:54:32 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[debug] [2023-04-11T11:54:32.900Z] Apr 11, 2023 1:54:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 1:54:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T12:11:55.488Z] Apr 11, 2023 2:11:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:11:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T12:11:55.520Z] Apr 11, 2023 2:11:55 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:11:55 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T12:11:55.549Z] Apr 11, 2023 2:11:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:11:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T12:11:55.637Z] Apr 11, 2023 2:11:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:11:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T12:12:17.027Z] Apr 11, 2023 2:12:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 2:12:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:12:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 2:12:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T12:12:17.438Z] Apr 11, 2023 2:12:17 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:12:17 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T12:12:17.745Z] Apr 11, 2023 2:12:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:12:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T12:12:25.894Z] Apr 11, 2023 2:12:25 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 2:12:25 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2023-04-11T13:28:11.684Z] Apr 11, 2023 3:28:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 3:28:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:28:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 3:28:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:28:11.744Z] Apr 11, 2023 3:28:11 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:28:11 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T13:28:12.053Z] Apr 11, 2023 3:28:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:28:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:28:19.849Z] Apr 11, 2023 3:28:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:28:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:28:19.850Z] Apr 11, 2023 3:28:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:28:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:28:19.867Z] Apr 11, 2023 3:28:19 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:28:19 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T13:28:19.888Z] Apr 11, 2023 3:28:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:28:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:29:19.911Z] Apr 11, 2023 3:29:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:29:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:30:19.927Z] Apr 11, 2023 3:30:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:30:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:31:19.946Z] Apr 11, 2023 3:31:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:31:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:32:13.080Z] Apr 11, 2023 3:32:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 3:32:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 3:32:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:32:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 3:32:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 3:32:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:32:19.963Z] Apr 11, 2023 3:32:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:32:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:33:35.882Z] Apr 11, 2023 3:33:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:33:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:33:39.819Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:33:40.832Z] Validating nodejs source
[debug] [2023-04-11T13:33:43.297Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:33:43.383Z] Building nodejs source
[debug] [2023-04-11T13:33:43.384Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:33:43.391Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:33:43.713Z] Serving at port 9006

[debug] [2023-04-11T13:33:43.730Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '}'
[debug] [2023-04-11T13:33:43.732Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '}'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '}'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '}'\n                                         ^"}
[debug] [2023-04-11T13:33:43.735Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '}' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '}'"}}
[debug] [2023-04-11T13:34:35.909Z] Apr 11, 2023 3:34:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:34:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:35:21.866Z] Apr 11, 2023 3:35:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:35:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:36:21.891Z] Apr 11, 2023 3:36:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:36:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:36:23.158Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:36:24.160Z] Validating nodejs source
[debug] [2023-04-11T13:36:27.158Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:36:27.326Z] Building nodejs source
[debug] [2023-04-11T13:36:27.326Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:36:27.331Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:36:27.581Z] Serving at port 9006

[debug] [2023-04-11T13:36:28.400Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T13:36:28.413Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T13:37:07.864Z] Apr 11, 2023 3:37:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:37:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:38:07.881Z] Apr 11, 2023 3:38:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:38:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:39:07.893Z] Apr 11, 2023 3:39:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:39:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:40:23.892Z] Apr 11, 2023 3:40:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:40:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:41:23.941Z] Apr 11, 2023 3:41:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:41:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:42:39.865Z] Apr 11, 2023 3:42:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:42:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:43:37.599Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:43:38.603Z] Validating nodejs source
[debug] [2023-04-11T13:43:42.298Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:43:42.310Z] Building nodejs source
[debug] [2023-04-11T13:43:42.310Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:43:42.314Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:43:42.707Z] Serving at port 9006

[debug] [2023-04-11T13:43:43.647Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T13:43:43.668Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T13:43:51.479Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:43:51.549Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:43:52.551Z] Validating nodejs source
[debug] [2023-04-11T13:43:54.470Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:43:54.476Z] Building nodejs source
[debug] [2023-04-11T13:43:54.476Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:43:54.477Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:43:54.737Z] Serving at port 9006

[debug] [2023-04-11T13:43:55.415Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T13:43:55.422Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T13:43:55.869Z] Apr 11, 2023 3:43:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:43:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:43:59.947Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:44:00.949Z] Validating nodejs source
[debug] [2023-04-11T13:44:03.588Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:44:03.631Z] Building nodejs source
[debug] [2023-04-11T13:44:03.631Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:44:03.644Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:44:04.193Z] Serving at port 9006

[debug] [2023-04-11T13:44:04.889Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T13:44:04.902Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T13:44:06.174Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:44:07.177Z] Validating nodejs source
[debug] [2023-04-11T13:44:09.086Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:44:09.094Z] Building nodejs source
[debug] [2023-04-11T13:44:09.094Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:44:09.095Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:44:09.592Z] Serving at port 9006

[debug] [2023-04-11T13:44:10.034Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T13:44:10.047Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T13:44:55.919Z] Apr 11, 2023 3:44:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:44:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:45:21.022Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:45:22.026Z] Validating nodejs source
[debug] [2023-04-11T13:45:24.844Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:45:24.851Z] Building nodejs source
[debug] [2023-04-11T13:45:24.852Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:45:24.856Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:45:25.411Z] Serving at port 9006

[debug] [2023-04-11T13:45:26.384Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:45:26.385Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:45:26.396Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:45:26.930Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:45:27.934Z] Validating nodejs source
[debug] [2023-04-11T13:45:31.416Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:45:31.518Z] Building nodejs source
[debug] [2023-04-11T13:45:31.519Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:45:31.520Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:45:31.783Z] Serving at port 9006

[debug] [2023-04-11T13:45:32.380Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:45:32.380Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:45:32.390Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:45:55.956Z] Apr 11, 2023 3:45:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:45:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:46:15.629Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:46:16.637Z] Validating nodejs source
[debug] [2023-04-11T13:46:19.523Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:46:19.591Z] Building nodejs source
[debug] [2023-04-11T13:46:19.591Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:46:19.593Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:46:19.834Z] Serving at port 9006

[debug] [2023-04-11T13:46:20.602Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:46:20.603Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:46:20.606Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:46:35.218Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:46:36.232Z] Validating nodejs source
[debug] [2023-04-11T13:46:38.936Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:46:38.941Z] Building nodejs source
[debug] [2023-04-11T13:46:38.941Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:46:38.942Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:46:39.446Z] Serving at port 9006

[debug] [2023-04-11T13:46:40.177Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:46:40.178Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:46:40.190Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:46:55.970Z] Apr 11, 2023 3:46:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:46:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:47:00.897Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:47:01.898Z] Validating nodejs source
[debug] [2023-04-11T13:47:06.856Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:47:06.941Z] Building nodejs source
[debug] [2023-04-11T13:47:06.941Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:47:06.942Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:47:06.942Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:47:07.288Z] Serving at port 9006

[debug] [2023-04-11T13:47:07.944Z] Validating nodejs source
[debug] [2023-04-11T13:47:09.720Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:47:09.723Z] Building nodejs source
[debug] [2023-04-11T13:47:09.723Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:47:09.729Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:47:09.738Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:47:09.738Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:47:09.751Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:47:10.197Z] Serving at port 9007

[debug] [2023-04-11T13:47:10.578Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:47:10.578Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:47:10.585Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:47:47.586Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:47:48.589Z] Validating nodejs source
[debug] [2023-04-11T13:47:51.420Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:47:51.474Z] Building nodejs source
[debug] [2023-04-11T13:47:51.474Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:47:51.477Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:47:51.974Z] Serving at port 9006

[debug] [2023-04-11T13:47:51.998Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected reserved word
[debug] [2023-04-11T13:47:51.998Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected reserved word
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected reserved word\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected reserved word\n                                         ^"}
[debug] [2023-04-11T13:47:52.007Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected reserved word {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected reserved word"}}
[debug] [2023-04-11T13:47:55.990Z] Apr 11, 2023 3:47:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:47:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:48:00.555Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:48:01.557Z] Validating nodejs source
[debug] [2023-04-11T13:48:04.291Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:48:04.339Z] Building nodejs source
[debug] [2023-04-11T13:48:04.339Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:48:04.340Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:48:04.546Z] Serving at port 9006

[debug] [2023-04-11T13:48:05.266Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:48:05.282Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:48:05.282Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:48:05.288Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:48:06.270Z] Validating nodejs source
[debug] [2023-04-11T13:48:08.874Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:48:08.880Z] Building nodejs source
[debug] [2023-04-11T13:48:08.880Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:48:08.882Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:48:08.883Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:48:09.213Z] Serving at port 9006

[debug] [2023-04-11T13:48:09.578Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:48:09.578Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:48:09.586Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:48:09.887Z] Validating nodejs source
[debug] [2023-04-11T13:48:12.929Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:48:12.990Z] Building nodejs source
[debug] [2023-04-11T13:48:12.990Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:48:12.991Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:48:12.992Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:48:13.305Z] Serving at port 9006

[debug] [2023-04-11T13:48:13.933Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:48:13.934Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:48:13.940Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:48:13.997Z] Validating nodejs source
[debug] [2023-04-11T13:48:16.609Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:48:16.612Z] Building nodejs source
[debug] [2023-04-11T13:48:16.613Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:48:16.627Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:48:16.973Z] Serving at port 9006

[debug] [2023-04-11T13:48:17.302Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:48:17.302Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:48:17.308Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:48:29.415Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:48:30.420Z] Validating nodejs source
[debug] [2023-04-11T13:48:32.758Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:48:32.761Z] Building nodejs source
[debug] [2023-04-11T13:48:32.761Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:48:32.763Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:48:32.983Z] Serving at port 9006

[debug] [2023-04-11T13:48:33.657Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'
[debug] [2023-04-11T13:48:33.657Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token 'export'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token 'export'\n                                         ^"}
[debug] [2023-04-11T13:48:33.660Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token 'export'"}}
[debug] [2023-04-11T13:48:46.998Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:48:48.002Z] Validating nodejs source
[debug] [2023-04-11T13:48:50.862Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:48:50.868Z] Building nodejs source
[debug] [2023-04-11T13:48:50.868Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:48:50.869Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:48:51.173Z] Serving at port 9006

[debug] [2023-04-11T13:48:51.827Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:48:51.828Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:48:51.835Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:49:02.718Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:49:03.724Z] Validating nodejs source
[debug] [2023-04-11T13:49:06.891Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:49:06.898Z] Building nodejs source
[debug] [2023-04-11T13:49:06.898Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:49:06.899Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:49:07.447Z] Serving at port 9006

[debug] [2023-04-11T13:49:08.125Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:49:08.126Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:49:08.132Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:49:11.866Z] Apr 11, 2023 3:49:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:49:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:49:53.861Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:49:54.872Z] Validating nodejs source
[debug] [2023-04-11T13:49:58.365Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:49:58.383Z] Building nodejs source
[debug] [2023-04-11T13:49:58.384Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:49:58.385Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:49:58.595Z] Serving at port 9006

[debug] [2023-04-11T13:49:59.362Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:49:59.363Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:49:59.387Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:50:07.953Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:50:08.956Z] Validating nodejs source
[debug] [2023-04-11T13:50:11.310Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:50:11.315Z] Building nodejs source
[debug] [2023-04-11T13:50:11.315Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:50:11.316Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:50:11.669Z] Serving at port 9006

[debug] [2023-04-11T13:50:11.886Z] Apr 11, 2023 3:50:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:50:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:50:12.350Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:50:12.351Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:50:12.362Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:51:11.937Z] Apr 11, 2023 3:51:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:51:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:51:57.866Z] Apr 11, 2023 3:51:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:51:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:52:43.866Z] Apr 11, 2023 3:52:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:52:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:53:13.298Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:53:14.306Z] Validating nodejs source
[debug] [2023-04-11T13:53:17.918Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:53:17.988Z] Building nodejs source
[debug] [2023-04-11T13:53:17.989Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:53:17.990Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:53:17.991Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:53:18.263Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:53:18.362Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:53:18.366Z] Serving at port 9006

[debug] [2023-04-11T13:53:18.379Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:53:18.380Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:53:18.382Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:53:19.366Z] Validating nodejs source
[debug] [2023-04-11T13:53:22.262Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:53:22.317Z] Building nodejs source
[debug] [2023-04-11T13:53:22.317Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:53:22.322Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:53:22.680Z] Serving at port 9006

[debug] [2023-04-11T13:53:22.691Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:53:22.691Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:53:22.695Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:53:43.882Z] Apr 11, 2023 3:53:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:53:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:54:43.896Z] Apr 11, 2023 3:54:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:54:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:55:29.866Z] Apr 11, 2023 3:55:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:55:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:56:08.401Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:56:09.403Z] Validating nodejs source
[debug] [2023-04-11T13:56:11.998Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:56:12.007Z] Building nodejs source
[debug] [2023-04-11T13:56:12.007Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:56:12.009Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:56:12.244Z] Serving at port 9006

[debug] [2023-04-11T13:56:12.269Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:56:12.270Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:56:12.275Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:56:18.823Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:56:19.825Z] Validating nodejs source
[debug] [2023-04-11T13:56:21.910Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:56:21.919Z] Building nodejs source
[debug] [2023-04-11T13:56:21.919Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:56:21.920Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:56:22.175Z] Serving at port 9006

[debug] [2023-04-11T13:56:22.226Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:56:22.226Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:56:22.234Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:56:29.887Z] Apr 11, 2023 3:56:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:56:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:56:42.442Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:56:43.444Z] Validating nodejs source
[debug] [2023-04-11T13:56:47.260Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:56:47.305Z] Building nodejs source
[debug] [2023-04-11T13:56:47.305Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:56:47.308Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:56:48.018Z] Serving at port 9006

[debug] [2023-04-11T13:56:48.032Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:56:48.033Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:56:48.035Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:56:53.447Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T13:56:54.451Z] Validating nodejs source
[debug] [2023-04-11T13:56:57.164Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T13:56:57.235Z] Building nodejs source
[debug] [2023-04-11T13:56:57.235Z] Analyzing nodejs backend spec
[debug] [2023-04-11T13:56:57.237Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T13:56:57.747Z] Serving at port 9006

[debug] [2023-04-11T13:56:58.402Z] Got response from /__/functions.yaml Failed to generate manifest from function source: SyntaxError: Unexpected token '<'
[debug] [2023-04-11T13:56:58.402Z] Failed to parse functions.yamlincomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:
     ... rom function source: SyntaxError: Unexpected token '<'
                                         ^ {"name":"YAMLException","reason":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line","mark":{"name":null,"buffer":"Failed to generate manifest from function source: SyntaxError: Unexpected token '<'\n\u0000","position":61,"line":0,"column":61},"message":"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 62:\n     ... rom function source: SyntaxError: Unexpected token '<'\n                                         ^"}
[debug] [2023-04-11T13:56:58.408Z] shutdown requested via /__/quitquitquit

[error] ⬢  functions: Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FirebaseError: Failed to load function definition from source: Failed to generate manifest from function source: SyntaxError: Unexpected token '<'"}}
[debug] [2023-04-11T13:57:26.209Z] Apr 11, 2023 3:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 3:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 3:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:57:26.214Z] Apr 11, 2023 3:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:57:29.897Z] Apr 11, 2023 3:57:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:57:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:58:15.884Z] Apr 11, 2023 3:58:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:58:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T13:58:48.377Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast [none]
[debug] [2023-04-11T13:58:48.377Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"eventId":"b0b5d870-bc99-4615-aef1-d50d99074300","eventType":"providers/firebase.auth/eventTypes/user.create","resource":{"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"},"params":{},"timestamp":"2023-04-11T13:58:48.375Z","data":{"uid":"Cadsehw46eKie0QsyCxXKn65jaRU","email":"tristan.varewijck@gmail.com","emailVerified":true,"displayName":"Tristan Varweijck","metadata":{"lastSignInTime":"2023-04-11T13:58:48.373Z"},"customClaims":{},"providerData":[{"providerId":"google.com","rawId":"6042570152824660814867713730237755602827","federatedId":"6042570152824660814867713730237755602827","displayName":"Tristan Varweijck","email":"tristan.varewijck@gmail.com","screenName":"Tristan Varewijck"}]}}
[debug] [2023-04-11T13:58:48.398Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T13:58:48.399Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T13:58:48.400Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T13:58:48.402Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast 200
[debug] [2023-04-11T13:58:48.402Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-04-11T13:58:48.411Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T13:58:48.411Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T13:58:48.411Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0 --> us-central1-onCreateUser-0
[debug] [2023-04-11T13:58:48.440Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T13:58:48.446Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T13:58:48.484Z] [worker-pool] addWorker(us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-onCreateUser)"}}
[debug] [2023-04-11T13:58:48.486Z] [worker-pool] Adding worker with key us-central1-onCreateUser, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-onCreateUser, total=1"}}
[debug] [2023-04-11T13:58:50.836Z] [runtime-status] [3551] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T13:58:50.838Z] [runtime-status] [3551] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T13:58:50.838Z] [runtime-status] [3551] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T13:58:50.839Z] [runtime-status] [3551] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T13:58:51.236Z] [runtime-status] [3551] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T13:58:51.237Z] [runtime-status] [3551] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T13:58:51.237Z] [runtime-status] [3551] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T13:58:51.239Z] [runtime-status] [3551] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T13:58:51.242Z] [runtime-status] [3551] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T13:58:51.242Z] [runtime-status] [3551] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T13:58:51.245Z] [runtime-status] [3551] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3551] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[warn] ⚠  /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js:2
    return <div>
           ^

SyntaxError: Unexpected token '<'
    at compileFunction (<anonymous>)
    at Object.compileFunction (node:vm:360:18)
    at wrapSafe (node:internal/modules/cjs/loader:1084:15)
    at Module._compile (node:internal/modules/cjs/loader:1119:27)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1209:10)
    at Module.load (node:internal/modules/cjs/loader:1033:32)
    at Function.Module._load (node:internal/modules/cjs/loader:868:12)
    at Module.require (node:internal/modules/cjs/loader:1057:19)
    at require (node:internal/modules/cjs/helpers:103:18)
    at Object.<anonymous> (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:10:21) {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js:2\n    return <div>\n           ^\n\nSyntaxError: Unexpected token '<'\n    at compileFunction (<anonymous>)\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1084:15)\n    at Module._compile (node:internal/modules/cjs/loader:1119:27)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1209:10)\n    at Module.load (node:internal/modules/cjs/loader:1033:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:868:12)\n    at Module.require (node:internal/modules/cjs/loader:1057:19)\n    at require (node:internal/modules/cjs/helpers:103:18)\n    at Object.<anonymous> (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:10:21)"}}
[warn] ⚠  We were unable to load your functions code. (see above) {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{}}}
[warn] ⚠  functions: Failed to initialize and load triggers. This shouldn't happen: Unexpected token '<' {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Failed to initialize and load triggers. This shouldn't happen: Unexpected token '<'"}}
[warn] ⚠  Your function was killed because it raised an unhandled error. {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Your function was killed because it raised an unhandled error."}}
[debug] [2023-04-11T13:58:51.511Z] [worker-us-central1-onCreateUser-7d1c26d0-9c64-4283-a4e1-4fca97e4a5c9]: exited {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-7d1c26d0-9c64-4283-a4e1-4fca97e4a5c9]: exited"}}
[debug] [2023-04-11T13:58:51.511Z] [worker-us-central1-onCreateUser-7d1c26d0-9c64-4283-a4e1-4fca97e4a5c9]: FINISHED {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-7d1c26d0-9c64-4283-a4e1-4fca97e4a5c9]: FINISHED"}}
[debug] [2023-04-11T13:59:15.908Z] Apr 11, 2023 3:59:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 3:59:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] FirebaseError: Failed to load function.
    at Timeout._onTimeout (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsRuntimeWorker.js:159:24)
    at listOnTimeout (node:internal/timers:559:17)
    at processTimers (node:internal/timers:502:7) {"metadata":{"emulator":{"name":"functions"},"message":{"name":"FirebaseError","children":[],"exit":1,"message":"Failed to load function.","status":500}}}
[debug] [2023-04-11T13:59:18.503Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T13:59:57.945Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T13:59:58.948Z] Validating nodejs source
[debug] [2023-04-11T14:00:01.879Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:00:01.886Z] Building nodejs source
[debug] [2023-04-11T14:00:01.886Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:00:01.888Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:00:02.199Z] Serving at port 9006

[debug] [2023-04-11T14:00:03.033Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:00:03.037Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:00:03.326Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T14:00:04.329Z] Validating nodejs source
[debug] [2023-04-11T14:00:06.934Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:00:06.939Z] Building nodejs source
[debug] [2023-04-11T14:00:06.939Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:00:06.940Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:00:07.241Z] Serving at port 9006

[debug] [2023-04-11T14:00:07.638Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:00:07.645Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:00:15.925Z] Apr 11, 2023 4:00:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:00:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:00:16.947Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T14:00:17.952Z] Validating nodejs source
[debug] [2023-04-11T14:00:20.027Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:00:20.040Z] Building nodejs source
[debug] [2023-04-11T14:00:20.040Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:00:20.041Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:00:20.333Z] Serving at port 9006

[debug] [2023-04-11T14:00:21.136Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:00:21.152Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:00:22.539Z] Apr 11, 2023 4:00:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:00:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:00:22.576Z] Apr 11, 2023 4:00:22 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:00:22 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:00:30.771Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast [none]
[debug] [2023-04-11T14:00:30.771Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"eventId":"71a25c99-c280-4e1b-856a-ee6e957839d3","eventType":"providers/firebase.auth/eventTypes/user.create","resource":{"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"},"params":{},"timestamp":"2023-04-11T14:00:30.770Z","data":{"uid":"9gyKreFdGI5RdJkgFAt8zvsNbpTK","email":"tristan.varewijck@gmail.com","emailVerified":false,"metadata":{"creationTime":"2023-04-11T14:00:30.769Z","lastSignInTime":"2023-04-11T14:00:30.769Z"},"customClaims":{},"providerData":[{"providerId":"password","email":"tristan.varewijck@gmail.com","federatedId":"tristan.varewijck@gmail.com","rawId":"tristan.varewijck@gmail.com"}]}}
[debug] [2023-04-11T14:00:30.775Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:00:30.776Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:00:30.776Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T14:00:30.777Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast 200
[debug] [2023-04-11T14:00:30.778Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-04-11T14:00:30.778Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:00:30.779Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:00:30.779Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0 --> us-central1-onCreateUser-0
[debug] [2023-04-11T14:00:30.782Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:00:30.782Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:00:30.782Z] [worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0"}}
[debug] [2023-04-11T14:00:30.793Z] [worker-pool] addWorker(us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:00:30.794Z] [worker-pool] Adding worker with key us-central1-onCreateUser, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-onCreateUser, total=1"}}
[debug] [2023-04-11T14:00:32.566Z] [runtime-status] [3615] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:00:32.567Z] [runtime-status] [3615] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:00:32.568Z] [runtime-status] [3615] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T14:00:32.570Z] [runtime-status] [3615] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:00:32.940Z] [runtime-status] [3615] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T14:00:32.941Z] [runtime-status] [3615] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T14:00:32.941Z] [runtime-status] [3615] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:00:32.943Z] [runtime-status] [3615] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:00:32.947Z] [runtime-status] [3615] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:00:32.947Z] [runtime-status] [3615] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T14:00:32.950Z] [runtime-status] [3615] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[debug] [2023-04-11T14:00:33.522Z] [runtime-status] [3615] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T14:00:33.526Z] [runtime-status] [3615] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_3f11d89aa4f51881.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_3f11d89aa4f51881.sock"}}
[debug] [2023-04-11T14:00:33.587Z] [worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: IDLE"}}
[debug] [2023-04-11T14:00:33.588Z] [worker-pool] submitRequest(triggerId=us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:00:33.589Z] [worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: BUSY"}}
[info] i  functions: Beginning execution of "onCreateUser" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Beginning execution of \"onCreateUser\""}}
[debug] [2023-04-11T14:00:33.610Z] [runtime-status] [3615] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7\",\"service\":\"firebaseauth.googleapis.com\"}"}}
[debug] [2023-04-11T14:00:33.612Z] [runtime-status] [3615] RunBackground {"data":{"uid":"9gyKreFdGI5RdJkgFAt8zvsNbpTK","email":"tristan.varewijck@gmail.com","emailVerified":false,"metadata":{"creationTime":"2023-04-11T14:00:30.769Z","lastSignInTime":"2023-04-11T14:00:30.769Z"},"customClaims":{},"providerData":[{"providerId":"password","email":"tristan.varewijck@gmail.com","federatedId":"tristan.varewijck@gmail.com","rawId":"tristan.varewijck@gmail.com"}]},"context":{"eventId":"71a25c99-c280-4e1b-856a-ee6e957839d3","eventType":"providers/firebase.auth/eventTypes/user.create","resource":"projects/tickety-85fd7","params":{},"timestamp":"2023-04-11T14:00:30.770Z"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3615] RunBackground {\"data\":{\"uid\":\"9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"email\":\"tristan.varewijck@gmail.com\",\"emailVerified\":false,\"metadata\":{\"creationTime\":\"2023-04-11T14:00:30.769Z\",\"lastSignInTime\":\"2023-04-11T14:00:30.769Z\"},\"customClaims\":{},\"providerData\":[{\"providerId\":\"password\",\"email\":\"tristan.varewijck@gmail.com\",\"federatedId\":\"tristan.varewijck@gmail.com\",\"rawId\":\"tristan.varewijck@gmail.com\"}]},\"context\":{\"eventId\":\"71a25c99-c280-4e1b-856a-ee6e957839d3\",\"eventType\":\"providers/firebase.auth/eventTypes/user.create\",\"resource\":\"projects/tickety-85fd7\",\"params\":{},\"timestamp\":\"2023-04-11T14:00:30.770Z\"}}"}}
[debug] [2023-04-11T14:00:34.234Z] Apr 11, 2023 4:00:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:00:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:00:34.459Z] [worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: IDLE"}}
[debug] [2023-04-11T14:00:34.459Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "onCreateUser" in 844.470212ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Finished \"onCreateUser\" in 844.470212ms"}}
[debug] [2023-04-11T14:00:34.460Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:00:34.460Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:00:34.460Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:00:34.462Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:00:34.463Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:00:34.463Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:00:34.463Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:00:34.552Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:00:34.552Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:34.331227Z"},"updateMask":{}},"context":{"eventId":"c4c736fa-42a9-4298-bdfa-6738c02be01b","timestamp":"2023-04-11T14:00:34.331Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:34.331227Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"c4c736fa-42a9-4298-bdfa-6738c02be01b\",\"timestamp\":\"2023-04-11T14:00:34.331Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"WARNING","message":"message=mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK is missing 'delivery' field"} {"user":{"severity":"WARNING","message":"message=mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK is missing 'delivery' field"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"message=mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK is missing 'delivery' field\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:00:34.646Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:00:34.646Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 94.447497ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 94.447497ms"}}
[debug] [2023-04-11T14:00:34.656Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:00:34.657Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:00:34.657Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:00:34.660Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:00:34.660Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:00:34.660Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:00:34.660Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:00:34.664Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:00:34.664Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:00:34.607Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:34.616640Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:34.331227Z"},"updateMask":{}},"context":{"eventId":"65df800d-1482-43d3-8ab5-a8a4edb15a2a","timestamp":"2023-04-11T14:00:34.616Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:00:34.607Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:34.616640Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:34.331227Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"65df800d-1482-43d3-8ab5-a8a4edb15a2a\",\"timestamp\":\"2023-04-11T14:00:34.616Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Attempting delivery for message: mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK"} {"user":{"severity":"INFO","message":"Attempting delivery for message: mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Attempting delivery for message: mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\"}"}}
[info] >  {"severity":"INFO","message":"Delivered message: mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK successfully. messageId: <92187618-49be-8608-bdca-f04bff1a3706@gmail.com> accepted: 1 rejected: 0 pending: 0"} {"user":{"severity":"INFO","message":"Delivered message: mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK successfully. messageId: <92187618-49be-8608-bdca-f04bff1a3706@gmail.com> accepted: 1 rejected: 0 pending: 0"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Delivered message: mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK successfully. messageId: <92187618-49be-8608-bdca-f04bff1a3706@gmail.com> accepted: 1 rejected: 0 pending: 0\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:00:35.846Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:00:35.846Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 1181.651584ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 1181.651584ms"}}
[debug] [2023-04-11T14:00:35.850Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:00:35.850Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:00:35.850Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:00:35.855Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:00:35.855Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:00:35.855Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:00:35.855Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:00:35.859Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:00:35.859Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:00:34.607Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T14:01:34.750Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:34.762112Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:00:34.607Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:34.616640Z"},"updateMask":{}},"context":{"eventId":"b1955747-86ab-44a5-8bbe-6c72ad1d8f0f","timestamp":"2023-04-11T14:00:34.762Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:00:34.607Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T14:01:34.750Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:34.762112Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:00:34.607Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:34.616640Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"b1955747-86ab-44a5-8bbe-6c72ad1d8f0f\",\"timestamp\":\"2023-04-11T14:00:34.762Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:00:35.895Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:00:35.895Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 36.696421ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 36.696421ms"}}
[debug] [2023-04-11T14:00:35.900Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:00:35.900Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:00:35.901Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:00:35.907Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:00:35.908Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:00:35.908Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:00:35.908Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:00:35.911Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:00:35.911Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:00:34.607Z"},"error":{"nullValue":null},"leaseExpireTime":{"nullValue":null},"state":{"stringValue":"SUCCESS"},"info":{"mapValue":{"fields":{"rejected":{"arrayValue":{}},"response":{"stringValue":"250 Ok: queued as Gpo9AWDvSTiyVjilprAzTw"},"pending":{"arrayValue":{}},"messageId":{"stringValue":"<92187618-49be-8608-bdca-f04bff1a3706@gmail.com>"},"accepted":{"arrayValue":{"values":[{"stringValue":"tristan.varewijck@gmail.com"}]}}}}},"endTime":{"timestampValue":"2023-04-11T14:00:35.816Z"},"attempts":{"integerValue":"1"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:35.821340Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:00:34.607Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T14:01:34.750Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:34.762112Z"},"updateMask":{}},"context":{"eventId":"0e3ed2db-9eae-48aa-b2b7-67bf2317c8df","timestamp":"2023-04-11T14:00:35.821Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:00:34.607Z\"},\"error\":{\"nullValue\":null},\"leaseExpireTime\":{\"nullValue\":null},\"state\":{\"stringValue\":\"SUCCESS\"},\"info\":{\"mapValue\":{\"fields\":{\"rejected\":{\"arrayValue\":{}},\"response\":{\"stringValue\":\"250 Ok: queued as Gpo9AWDvSTiyVjilprAzTw\"},\"pending\":{\"arrayValue\":{}},\"messageId\":{\"stringValue\":\"<92187618-49be-8608-bdca-f04bff1a3706@gmail.com>\"},\"accepted\":{\"arrayValue\":{\"values\":[{\"stringValue\":\"tristan.varewijck@gmail.com\"}]}}}}},\"endTime\":{\"timestampValue\":\"2023-04-11T14:00:35.816Z\"},\"attempts\":{\"integerValue\":\"1\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:35.821340Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:00:34.607Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T14:01:34.750Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:34.762112Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"0e3ed2db-9eae-48aa-b2b7-67bf2317c8df\",\"timestamp\":\"2023-04-11T14:00:35.821Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\"}}"}}
[info] i  functions: Finished "processQueue" in 0.962926ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 0.962926ms"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:00:35.913Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:00:35.913Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T14:01:03.239Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T14:01:04.244Z] Validating nodejs source
[debug] [2023-04-11T14:01:06.895Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:01:06.909Z] Building nodejs source
[debug] [2023-04-11T14:01:06.909Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:01:06.911Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:01:07.329Z] Serving at port 9006

[debug] [2023-04-11T14:01:08.046Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:01:08.056Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:01:08.066Z] [worker-pool] Shutting down IDLE worker (us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Shutting down IDLE worker (us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:01:08.066Z] [worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: FINISHING {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: FINISHING"}}
[debug] [2023-04-11T14:01:08.080Z] [worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: exited {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: exited"}}
[debug] [2023-04-11T14:01:08.080Z] [worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: FINISHED {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-25f57dc5-4384-44b0-b22b-ac02acdab6ba]: FINISHED"}}
[debug] [2023-04-11T14:01:30.111Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/emailTemplates/welcomeMail.js changed, reloading triggers"}}
[debug] [2023-04-11T14:01:31.122Z] Validating nodejs source
[debug] [2023-04-11T14:01:33.471Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:01:33.477Z] Building nodejs source
[debug] [2023-04-11T14:01:33.477Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:01:33.478Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:01:33.676Z] Serving at port 9006

[debug] [2023-04-11T14:01:34.331Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:01:34.337Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:01:43.157Z] Apr 11, 2023 4:01:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:01:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:01:43.226Z] Apr 11, 2023 4:01:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:01:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:01:43.429Z] Apr 11, 2023 4:01:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:01:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:01:45.079Z] Apr 11, 2023 4:01:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:01:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:02:34.927Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:02:35.929Z] Validating nodejs source
[debug] [2023-04-11T14:02:38.442Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:02:38.499Z] Building nodejs source
[debug] [2023-04-11T14:02:38.499Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:02:38.503Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:02:39.206Z] Serving at port 9006

[debug] [2023-04-11T14:02:39.866Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:02:39.874Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:02:45.132Z] Apr 11, 2023 4:02:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:02:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:03:10.009Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:03:11.013Z] Validating nodejs source
[debug] [2023-04-11T14:03:14.100Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:03:14.166Z] Building nodejs source
[debug] [2023-04-11T14:03:14.167Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:03:14.169Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:03:14.422Z] Serving at port 9006

[debug] [2023-04-11T14:03:15.084Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:03:15.091Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:03:33.634Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast [none]
[debug] [2023-04-11T14:03:33.634Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"eventId":"33c00c10-dfc9-4e2a-bb7f-1d313811ce3a","eventType":"providers/firebase.auth/eventTypes/user.create","resource":{"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"},"params":{},"timestamp":"2023-04-11T14:03:33.633Z","data":{"uid":"SNIhoeV3KlebeGrdmeoaYniKclWx","email":"tristanconnect4@outlook.com","emailVerified":true,"displayName":"dk","photoURL":"k","metadata":{"lastSignInTime":"2023-04-11T14:03:33.632Z"},"customClaims":{},"providerData":[{"providerId":"google.com","rawId":"4960062528676714067626899789612828999865","federatedId":"4960062528676714067626899789612828999865","displayName":"dk","photoUrl":"k","email":"tristanconnect4@outlook.com","screenName":"k"}]}}
[debug] [2023-04-11T14:03:33.640Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:03:33.641Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:03:33.644Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T14:03:33.645Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast 200
[debug] [2023-04-11T14:03:33.645Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-04-11T14:03:33.646Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:03:33.646Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:03:33.646Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0 --> us-central1-onCreateUser-0
[debug] [2023-04-11T14:03:33.654Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:03:33.655Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:03:33.655Z] [worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0"}}
[debug] [2023-04-11T14:03:33.666Z] [worker-pool] addWorker(us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:03:33.666Z] [worker-pool] Adding worker with key us-central1-onCreateUser, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-onCreateUser, total=1"}}
[debug] [2023-04-11T14:03:35.876Z] [runtime-status] [3722] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:03:35.877Z] [runtime-status] [3722] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:03:35.878Z] [runtime-status] [3722] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T14:03:35.879Z] [runtime-status] [3722] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:03:36.254Z] [runtime-status] [3722] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T14:03:36.254Z] [runtime-status] [3722] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T14:03:36.255Z] [runtime-status] [3722] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:03:36.256Z] [runtime-status] [3722] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:03:36.259Z] [runtime-status] [3722] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:03:36.259Z] [runtime-status] [3722] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T14:03:36.265Z] [runtime-status] [3722] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[debug] [2023-04-11T14:03:36.566Z] [runtime-status] [3722] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T14:03:36.568Z] [runtime-status] [3722] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_c05c5a89751259b5.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_c05c5a89751259b5.sock"}}
[debug] [2023-04-11T14:03:36.644Z] [worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: IDLE"}}
[debug] [2023-04-11T14:03:36.645Z] [worker-pool] submitRequest(triggerId=us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:03:36.645Z] [worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: BUSY"}}
[info] i  functions: Beginning execution of "onCreateUser" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Beginning execution of \"onCreateUser\""}}
[debug] [2023-04-11T14:03:36.667Z] [runtime-status] [3722] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7\",\"service\":\"firebaseauth.googleapis.com\"}"}}
[debug] [2023-04-11T14:03:36.667Z] [runtime-status] [3722] RunBackground {"data":{"uid":"SNIhoeV3KlebeGrdmeoaYniKclWx","email":"tristanconnect4@outlook.com","emailVerified":true,"displayName":"dk","photoURL":"k","metadata":{"lastSignInTime":"2023-04-11T14:03:33.632Z"},"customClaims":{},"providerData":[{"providerId":"google.com","rawId":"4960062528676714067626899789612828999865","federatedId":"4960062528676714067626899789612828999865","displayName":"dk","photoUrl":"k","email":"tristanconnect4@outlook.com","screenName":"k"}]},"context":{"eventId":"33c00c10-dfc9-4e2a-bb7f-1d313811ce3a","eventType":"providers/firebase.auth/eventTypes/user.create","resource":"projects/tickety-85fd7","params":{},"timestamp":"2023-04-11T14:03:33.633Z"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3722] RunBackground {\"data\":{\"uid\":\"SNIhoeV3KlebeGrdmeoaYniKclWx\",\"email\":\"tristanconnect4@outlook.com\",\"emailVerified\":true,\"displayName\":\"dk\",\"photoURL\":\"k\",\"metadata\":{\"lastSignInTime\":\"2023-04-11T14:03:33.632Z\"},\"customClaims\":{},\"providerData\":[{\"providerId\":\"google.com\",\"rawId\":\"4960062528676714067626899789612828999865\",\"federatedId\":\"4960062528676714067626899789612828999865\",\"displayName\":\"dk\",\"photoUrl\":\"k\",\"email\":\"tristanconnect4@outlook.com\",\"screenName\":\"k\"}]},\"context\":{\"eventId\":\"33c00c10-dfc9-4e2a-bb7f-1d313811ce3a\",\"eventType\":\"providers/firebase.auth/eventTypes/user.create\",\"resource\":\"projects/tickety-85fd7\",\"params\":{},\"timestamp\":\"2023-04-11T14:03:33.633Z\"}}"}}
[debug] [2023-04-11T14:03:37.154Z] Apr 11, 2023 4:03:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:03:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[info] >  TypeError: admin.firestore(...).collection(...).set is not a function {"user":"TypeError: admin.firestore(...).collection(...).set is not a function","metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"\u001b[90m> \u001b[39m TypeError: admin.firestore(...).collection(...).set is not a function"}}
[info] >      at /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:139:48 {"user":"    at /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:139:48","metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"\u001b[90m> \u001b[39m     at /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:139:48"}}
[info] >      at async runFunction (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:504:9) {"user":"    at async runFunction (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:504:9)","metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"\u001b[90m> \u001b[39m     at async runFunction (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:504:9)"}}
[info] >      at async runBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:515:5) {"user":"    at async runBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:515:5)","metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"\u001b[90m> \u001b[39m     at async runBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:515:5)"}}
[info] >      at async processBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:499:5) {"user":"    at async processBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:499:5)","metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"\u001b[90m> \u001b[39m     at async processBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:499:5)"}}
[info] >      at async /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:690:21 {"user":"    at async /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:690:21","metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"\u001b[90m> \u001b[39m     at async /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:690:21"}}
[debug] [2023-04-11T14:03:37.194Z] [worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: IDLE"}}
[debug] [2023-04-11T14:03:37.194Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "onCreateUser" in 526.48079ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Finished \"onCreateUser\" in 526.48079ms"}}
[debug] [2023-04-11T14:03:45.151Z] Apr 11, 2023 4:03:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:03:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:04:45.167Z] Apr 11, 2023 4:04:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:04:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:05:45.182Z] Apr 11, 2023 4:05:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:05:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:05:54.455Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:05:55.471Z] Validating nodejs source
[debug] [2023-04-11T14:05:58.655Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:05:58.733Z] Building nodejs source
[debug] [2023-04-11T14:05:58.733Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:05:58.737Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:05:58.997Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:05:59.067Z] Serving at port 9006

[debug] [2023-04-11T14:05:59.703Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:05:59.709Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:05:59.726Z] [worker-pool] Shutting down IDLE worker (us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Shutting down IDLE worker (us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:05:59.726Z] [worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: FINISHING {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: FINISHING"}}
[debug] [2023-04-11T14:05:59.740Z] [worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: exited {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: exited"}}
[debug] [2023-04-11T14:05:59.740Z] [worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: FINISHED {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-16def6e5-fd9b-4da2-8f07-c963af15f2ca]: FINISHED"}}
[debug] [2023-04-11T14:06:00.000Z] Validating nodejs source
[debug] [2023-04-11T14:06:02.228Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:06:02.237Z] Building nodejs source
[debug] [2023-04-11T14:06:02.237Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:06:02.238Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:06:02.624Z] Serving at port 9006

[debug] [2023-04-11T14:06:03.463Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:06:03.471Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:06:03.981Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:06:04.983Z] Validating nodejs source
[debug] [2023-04-11T14:06:07.539Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:06:07.616Z] Building nodejs source
[debug] [2023-04-11T14:06:07.616Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:06:07.617Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:06:07.901Z] Serving at port 9006

[debug] [2023-04-11T14:06:08.403Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:06:08.410Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:06:16.123Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:06:17.126Z] Validating nodejs source
[debug] [2023-04-11T14:06:19.499Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:06:19.539Z] Building nodejs source
[debug] [2023-04-11T14:06:19.540Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:06:19.541Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:06:19.542Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:06:19.975Z] Serving at port 9006

[debug] [2023-04-11T14:06:20.547Z] Validating nodejs source
[debug] [2023-04-11T14:06:23.552Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:06:23.559Z] Building nodejs source
[debug] [2023-04-11T14:06:23.559Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:06:23.565Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:06:23.602Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:06:23.663Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:06:24.172Z] Serving at port 9007

[debug] [2023-04-11T14:06:24.569Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:06:24.576Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:06:30.879Z] Apr 11, 2023 4:06:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:06:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:07:46.924Z] Apr 11, 2023 4:07:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:07:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:08:32.870Z] Apr 11, 2023 4:08:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:08:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:08:47.658Z] Apr 11, 2023 4:08:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:08:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:08:47.661Z] Apr 11, 2023 4:08:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:08:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:08:47.679Z] Apr 11, 2023 4:08:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:08:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:09:18.871Z] Apr 11, 2023 4:09:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:09:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:10:18.890Z] Apr 11, 2023 4:10:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:10:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:10:23.609Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:10:24.614Z] Validating nodejs source
[debug] [2023-04-11T14:10:27.716Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:10:27.790Z] Building nodejs source
[debug] [2023-04-11T14:10:27.790Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:10:27.795Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:10:28.153Z] Serving at port 9006

[debug] [2023-04-11T14:10:28.968Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:10:28.988Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:10:30.479Z] Apr 11, 2023 4:10:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:10:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:10:30.508Z] Apr 11, 2023 4:10:30 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:10:30 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:10:42.845Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast [none]
[debug] [2023-04-11T14:10:42.845Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"eventId":"c3c1f984-020b-4474-b218-d315cf45ce1c","eventType":"providers/firebase.auth/eventTypes/user.create","resource":{"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"},"params":{},"timestamp":"2023-04-11T14:10:42.844Z","data":{"uid":"OgjuW2P3UDEgkz0XGIXffAKgZak3","email":"tristan.varewijck@gmail.com","emailVerified":true,"metadata":{"lastSignInTime":"2023-04-11T14:10:42.843Z"},"customClaims":{},"providerData":[{"providerId":"google.com","rawId":"3644979435638477172842617391382884937246","federatedId":"3644979435638477172842617391382884937246","email":"tristan.varewijck@gmail.com"}]}}
[debug] [2023-04-11T14:10:42.849Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:10:42.850Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:10:42.850Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T14:10:42.851Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast 200
[debug] [2023-04-11T14:10:42.851Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-04-11T14:10:42.852Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:10:42.852Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:10:42.852Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0 --> us-central1-onCreateUser-0
[debug] [2023-04-11T14:10:42.859Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:10:42.860Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:10:42.860Z] [worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0"}}
[debug] [2023-04-11T14:10:42.871Z] [worker-pool] addWorker(us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:10:42.872Z] [worker-pool] Adding worker with key us-central1-onCreateUser, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-onCreateUser, total=1"}}
[debug] [2023-04-11T14:10:45.369Z] [runtime-status] [3873] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:10:45.372Z] [runtime-status] [3873] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:10:45.373Z] [runtime-status] [3873] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T14:10:45.373Z] [runtime-status] [3873] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:10:45.818Z] [runtime-status] [3873] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T14:10:45.818Z] [runtime-status] [3873] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T14:10:45.818Z] [runtime-status] [3873] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:10:45.819Z] [runtime-status] [3873] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:10:45.822Z] [runtime-status] [3873] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:10:45.822Z] [runtime-status] [3873] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T14:10:45.825Z] [runtime-status] [3873] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[debug] [2023-04-11T14:10:46.128Z] [runtime-status] [3873] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T14:10:46.129Z] [runtime-status] [3873] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_0407a34d3ca20227.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_0407a34d3ca20227.sock"}}
[debug] [2023-04-11T14:10:46.178Z] [worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: IDLE"}}
[debug] [2023-04-11T14:10:46.179Z] [worker-pool] submitRequest(triggerId=us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:10:46.179Z] [worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: BUSY"}}
[info] i  functions: Beginning execution of "onCreateUser" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Beginning execution of \"onCreateUser\""}}
[debug] [2023-04-11T14:10:46.201Z] [runtime-status] [3873] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7\",\"service\":\"firebaseauth.googleapis.com\"}"}}
[debug] [2023-04-11T14:10:46.201Z] [runtime-status] [3873] RunBackground {"data":{"uid":"OgjuW2P3UDEgkz0XGIXffAKgZak3","email":"tristan.varewijck@gmail.com","emailVerified":true,"metadata":{"lastSignInTime":"2023-04-11T14:10:42.843Z"},"customClaims":{},"providerData":[{"providerId":"google.com","rawId":"3644979435638477172842617391382884937246","federatedId":"3644979435638477172842617391382884937246","email":"tristan.varewijck@gmail.com"}]},"context":{"eventId":"c3c1f984-020b-4474-b218-d315cf45ce1c","eventType":"providers/firebase.auth/eventTypes/user.create","resource":"projects/tickety-85fd7","params":{},"timestamp":"2023-04-11T14:10:42.844Z"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [3873] RunBackground {\"data\":{\"uid\":\"OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"email\":\"tristan.varewijck@gmail.com\",\"emailVerified\":true,\"metadata\":{\"lastSignInTime\":\"2023-04-11T14:10:42.843Z\"},\"customClaims\":{},\"providerData\":[{\"providerId\":\"google.com\",\"rawId\":\"3644979435638477172842617391382884937246\",\"federatedId\":\"3644979435638477172842617391382884937246\",\"email\":\"tristan.varewijck@gmail.com\"}]},\"context\":{\"eventId\":\"c3c1f984-020b-4474-b218-d315cf45ce1c\",\"eventType\":\"providers/firebase.auth/eventTypes/user.create\",\"resource\":\"projects/tickety-85fd7\",\"params\":{},\"timestamp\":\"2023-04-11T14:10:42.844Z\"}}"}}
[debug] [2023-04-11T14:10:46.673Z] Apr 11, 2023 4:10:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:10:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:10:46.746Z] [work-queue] {"queueLength":1,"workRunningCount":1}
[debug] [2023-04-11T14:10:46.746Z] [work-queue] {"queueLength":0,"workRunningCount":2}
[debug] [2023-04-11T14:10:46.746Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:10:46.749Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:10:46.749Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:10:46.749Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:10:46.749Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:10:46.782Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:10:46.782Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:46.698745Z"},"updateMask":{}},"context":{"eventId":"44dc1998-e0f7-4dc8-b6a3-68745457bc90","timestamp":"2023-04-11T14:10:46.698Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:46.698745Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"44dc1998-e0f7-4dc8-b6a3-68745457bc90\",\"timestamp\":\"2023-04-11T14:10:46.698Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"WriteResult {\n  _writeTime: Timestamp { _seconds: 1681222246, _nanoseconds: 698745000 }\n}"} {"user":{"severity":"INFO","message":"WriteResult {\n  _writeTime: Timestamp { _seconds: 1681222246, _nanoseconds: 698745000 }\n}"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"WriteResult {\\n  _writeTime: Timestamp { _seconds: 1681222246, _nanoseconds: 698745000 }\\n}\"}"}}
[debug] [2023-04-11T14:10:46.836Z] [worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: IDLE"}}
[debug] [2023-04-11T14:10:46.836Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[info] i  functions: Finished "onCreateUser" in 632.330041ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Finished \"onCreateUser\" in 632.330041ms"}}
[info] >  {"severity":"WARNING","message":"message=mail/OgjuW2P3UDEgkz0XGIXffAKgZak3 is missing 'delivery' field"} {"user":{"severity":"WARNING","message":"message=mail/OgjuW2P3UDEgkz0XGIXffAKgZak3 is missing 'delivery' field"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"message=mail/OgjuW2P3UDEgkz0XGIXffAKgZak3 is missing 'delivery' field\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:10:46.937Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:10:46.938Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 158.489472ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 158.489472ms"}}
[debug] [2023-04-11T14:10:46.940Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:10:46.940Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:10:46.940Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:10:46.944Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:10:46.944Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:10:46.944Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:10:46.944Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:10:46.951Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:10:46.952Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:10:46.845Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:46.879969Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:46.698745Z"},"updateMask":{}},"context":{"eventId":"e37f2b76-dde5-4fa2-b6d8-492b671d4f56","timestamp":"2023-04-11T14:10:46.879Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:10:46.845Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:46.879969Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:46.698745Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"e37f2b76-dde5-4fa2-b6d8-492b671d4f56\",\"timestamp\":\"2023-04-11T14:10:46.879Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Attempting delivery for message: mail/OgjuW2P3UDEgkz0XGIXffAKgZak3"} {"user":{"severity":"INFO","message":"Attempting delivery for message: mail/OgjuW2P3UDEgkz0XGIXffAKgZak3"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Attempting delivery for message: mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\"}"}}
[info] >  {"severity":"INFO","message":"Delivered message: mail/OgjuW2P3UDEgkz0XGIXffAKgZak3 successfully. messageId: <fd6aa41b-536c-5d31-30c1-7c0b7cdd4ebe@gmail.com> accepted: 1 rejected: 0 pending: 0"} {"user":{"severity":"INFO","message":"Delivered message: mail/OgjuW2P3UDEgkz0XGIXffAKgZak3 successfully. messageId: <fd6aa41b-536c-5d31-30c1-7c0b7cdd4ebe@gmail.com> accepted: 1 rejected: 0 pending: 0"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Delivered message: mail/OgjuW2P3UDEgkz0XGIXffAKgZak3 successfully. messageId: <fd6aa41b-536c-5d31-30c1-7c0b7cdd4ebe@gmail.com> accepted: 1 rejected: 0 pending: 0\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:10:48.395Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:10:48.395Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 1444.4844699999999ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 1444.4844699999999ms"}}
[debug] [2023-04-11T14:10:48.404Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:10:48.404Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:10:48.404Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:10:48.408Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:10:48.408Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:10:48.408Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:10:48.408Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:10:48.413Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:10:48.413Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:10:46.845Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T14:11:46.970Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:47.007001Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:10:46.845Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:46.879969Z"},"updateMask":{}},"context":{"eventId":"6d6c8633-40fc-496c-ae38-d431471b5f9f","timestamp":"2023-04-11T14:10:47.007Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:10:46.845Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T14:11:46.970Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:47.007001Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:10:46.845Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:46.879969Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"6d6c8633-40fc-496c-ae38-d431471b5f9f\",\"timestamp\":\"2023-04-11T14:10:47.007Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:10:48.445Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:10:48.445Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 30.687913ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 30.687913ms"}}
[debug] [2023-04-11T14:10:48.452Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:10:48.452Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:10:48.452Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:10:48.454Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:10:48.455Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:10:48.455Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:10:48.455Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:10:48.458Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:10:48.459Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:10:46.845Z"},"error":{"nullValue":null},"leaseExpireTime":{"nullValue":null},"state":{"stringValue":"SUCCESS"},"info":{"mapValue":{"fields":{"rejected":{"arrayValue":{}},"response":{"stringValue":"250 Ok: queued as UY6gvNqgSlKnLBiaXSmPkQ"},"pending":{"arrayValue":{}},"messageId":{"stringValue":"<fd6aa41b-536c-5d31-30c1-7c0b7cdd4ebe@gmail.com>"},"accepted":{"arrayValue":{"values":[{"stringValue":"tristan.varewijck@gmail.com"}]}}}}},"endTime":{"timestampValue":"2023-04-11T14:10:48.355Z"},"attempts":{"integerValue":"1"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:48.359315Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:10:46.845Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T14:11:46.970Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:47.007001Z"},"updateMask":{}},"context":{"eventId":"bbca804d-ebd7-4226-b6c0-ef6450dcaae7","timestamp":"2023-04-11T14:10:48.359Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:10:46.845Z\"},\"error\":{\"nullValue\":null},\"leaseExpireTime\":{\"nullValue\":null},\"state\":{\"stringValue\":\"SUCCESS\"},\"info\":{\"mapValue\":{\"fields\":{\"rejected\":{\"arrayValue\":{}},\"response\":{\"stringValue\":\"250 Ok: queued as UY6gvNqgSlKnLBiaXSmPkQ\"},\"pending\":{\"arrayValue\":{}},\"messageId\":{\"stringValue\":\"<fd6aa41b-536c-5d31-30c1-7c0b7cdd4ebe@gmail.com>\"},\"accepted\":{\"arrayValue\":{\"values\":[{\"stringValue\":\"tristan.varewijck@gmail.com\"}]}}}}},\"endTime\":{\"timestampValue\":\"2023-04-11T14:10:48.355Z\"},\"attempts\":{\"integerValue\":\"1\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:48.359315Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:10:46.845Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T14:11:46.970Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:47.007001Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"bbca804d-ebd7-4226-b6c0-ef6450dcaae7\",\"timestamp\":\"2023-04-11T14:10:48.359Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\"}}"}}
[info] i  functions: Finished "processQueue" in 1.012007ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 1.012007ms"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:10:48.461Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:10:48.461Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T14:11:46.211Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:11:47.212Z] Validating nodejs source
[debug] [2023-04-11T14:11:50.618Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:11:50.672Z] Building nodejs source
[debug] [2023-04-11T14:11:50.672Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:11:50.673Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:11:51.066Z] Serving at port 9006

[debug] [2023-04-11T14:11:51.749Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:11:51.753Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:11:51.762Z] [worker-pool] Shutting down IDLE worker (us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Shutting down IDLE worker (us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:11:51.763Z] [worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: FINISHING {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: FINISHING"}}
[debug] [2023-04-11T14:11:51.776Z] [worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: exited {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: exited"}}
[debug] [2023-04-11T14:11:51.777Z] [worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: FINISHED {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-1b001fed-15fc-4d6b-812c-181209b5e5fa]: FINISHED"}}
[debug] [2023-04-11T14:12:08.096Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:12:09.101Z] Validating nodejs source
[debug] [2023-04-11T14:12:11.430Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:12:11.494Z] Building nodejs source
[debug] [2023-04-11T14:12:11.495Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:12:11.496Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:12:12.080Z] Serving at port 9006

[debug] [2023-04-11T14:12:12.777Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:12:12.783Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:12:28.893Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:12:29.894Z] Validating nodejs source
[debug] [2023-04-11T14:12:33.081Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:12:33.121Z] Building nodejs source
[debug] [2023-04-11T14:12:33.121Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:12:33.124Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:12:33.480Z] Serving at port 9006

[debug] [2023-04-11T14:12:34.235Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:12:34.242Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:12:40.315Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:12:41.321Z] Validating nodejs source
[debug] [2023-04-11T14:12:44.773Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:12:44.776Z] Building nodejs source
[debug] [2023-04-11T14:12:44.776Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:12:44.777Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:12:44.780Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:12:45.119Z] Serving at port 9006

[debug] [2023-04-11T14:12:45.804Z] Validating nodejs source
[debug] [2023-04-11T14:12:48.074Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:12:48.078Z] Building nodejs source
[debug] [2023-04-11T14:12:48.079Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:12:48.084Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:12:48.128Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:12:48.169Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:12:48.714Z] Serving at port 9007

[debug] [2023-04-11T14:12:49.183Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:12:49.191Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:12:53.732Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:12:54.735Z] Validating nodejs source
[debug] [2023-04-11T14:12:57.644Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:12:57.689Z] Building nodejs source
[debug] [2023-04-11T14:12:57.689Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:12:57.690Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:12:57.690Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:12:58.062Z] Serving at port 9006

[debug] [2023-04-11T14:12:58.427Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:12:58.433Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:12:58.692Z] Validating nodejs source
[debug] [2023-04-11T14:13:01.410Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:13:01.419Z] Building nodejs source
[debug] [2023-04-11T14:13:01.420Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:13:01.421Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:13:01.885Z] Serving at port 9006

[debug] [2023-04-11T14:13:02.419Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:13:02.431Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:13:10.585Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:13:11.588Z] Validating nodejs source
[debug] [2023-04-11T14:13:14.455Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:13:14.516Z] Building nodejs source
[debug] [2023-04-11T14:13:14.516Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:13:14.517Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:13:14.843Z] Serving at port 9006

[debug] [2023-04-11T14:13:15.452Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:13:15.459Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:13:32.932Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:13:33.954Z] Validating nodejs source
[debug] [2023-04-11T14:13:37.099Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:13:37.198Z] Building nodejs source
[debug] [2023-04-11T14:13:37.198Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:13:37.199Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:13:37.856Z] Serving at port 9006

[debug] [2023-04-11T14:13:39.118Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:13:39.123Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:13:40.813Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:13:41.821Z] Validating nodejs source
[debug] [2023-04-11T14:13:44.739Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:13:44.816Z] Building nodejs source
[debug] [2023-04-11T14:13:44.817Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:13:44.820Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:13:45.151Z] Serving at port 9006

[debug] [2023-04-11T14:13:45.959Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:13:45.968Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:14:46.572Z] Apr 11, 2023 4:14:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:14:46.657Z] Apr 11, 2023 4:14:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:14:46.752Z] Apr 11, 2023 4:14:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:14:47.597Z] Apr 11, 2023 4:14:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:14:47.793Z] Apr 11, 2023 4:14:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:14:50.548Z] Apr 11, 2023 4:14:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:14:51.412Z] Apr 11, 2023 4:14:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:14:53.693Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:14:53.695Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:14:53.696Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:14:53.738Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:14:53.750Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:14:53.757Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:14:53.757Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[debug] [2023-04-11T14:14:53.771Z] Apr 11, 2023 4:14:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:14:53.836Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:14:53.839Z] [runtime-status] [2708] RunBackground {"data":{"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:10:46.845Z"},"error":{"nullValue":null},"leaseExpireTime":{"nullValue":null},"state":{"stringValue":"SUCCESS"},"info":{"mapValue":{"fields":{"rejected":{"arrayValue":{}},"response":{"stringValue":"250 Ok: queued as UY6gvNqgSlKnLBiaXSmPkQ"},"pending":{"arrayValue":{}},"messageId":{"stringValue":"<fd6aa41b-536c-5d31-30c1-7c0b7cdd4ebe@gmail.com>"},"accepted":{"arrayValue":{"values":[{"stringValue":"tristan.varewijck@gmail.com"}]}}}}},"endTime":{"timestampValue":"2023-04-11T14:10:48.355Z"},"attempts":{"integerValue":"1"}}}}},"createTime":"2023-04-11T14:10:46.698745Z","updateTime":"2023-04-11T14:10:48.359315Z"},"updateMask":{}},"context":{"eventId":"a63b71d6-21ee-4faf-b6eb-da0081f2bb69","timestamp":"2023-04-11T14:14:53.630Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:10:46.845Z\"},\"error\":{\"nullValue\":null},\"leaseExpireTime\":{\"nullValue\":null},\"state\":{\"stringValue\":\"SUCCESS\"},\"info\":{\"mapValue\":{\"fields\":{\"rejected\":{\"arrayValue\":{}},\"response\":{\"stringValue\":\"250 Ok: queued as UY6gvNqgSlKnLBiaXSmPkQ\"},\"pending\":{\"arrayValue\":{}},\"messageId\":{\"stringValue\":\"<fd6aa41b-536c-5d31-30c1-7c0b7cdd4ebe@gmail.com>\"},\"accepted\":{\"arrayValue\":{\"values\":[{\"stringValue\":\"tristan.varewijck@gmail.com\"}]}}}}},\"endTime\":{\"timestampValue\":\"2023-04-11T14:10:48.355Z\"},\"attempts\":{\"integerValue\":\"1\"}}}}},\"createTime\":\"2023-04-11T14:10:46.698745Z\",\"updateTime\":\"2023-04-11T14:10:48.359315Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"a63b71d6-21ee-4faf-b6eb-da0081f2bb69\",\"timestamp\":\"2023-04-11T14:14:53.630Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/OgjuW2P3UDEgkz0XGIXffAKgZak3\"}}"}}
[info] >  {"severity":"WARNING","message":"Snapshot has no readTime. Using now()"} {"user":{"severity":"WARNING","message":"Snapshot has no readTime. Using now()"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"Snapshot has no readTime. Using now()\"}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:14:53.884Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:14:53.885Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 59.475899ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 59.475899ms"}}
[debug] [2023-04-11T14:14:53.887Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:14:53.887Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:14:53.887Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:14:53.892Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:14:53.893Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:14:53.893Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:14:53.893Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:14:53.899Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:14:53.899Z] [runtime-status] [2708] RunBackground {"data":{"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"test subject"},"html":{"stringValue":"<p> test html </p>"},"text":{"stringValue":"test text"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T11:45:32.325Z"},"error":{"nullValue":null},"leaseExpireTime":{"nullValue":null},"state":{"stringValue":"SUCCESS"},"info":{"mapValue":{"fields":{"rejected":{"arrayValue":{}},"response":{"stringValue":"250 Ok: queued as 545e-KzoRsaUD-vLs-b6qg"},"pending":{"arrayValue":{}},"messageId":{"stringValue":"<9c8f1679-1aea-b4cc-4f8d-a7bb2fe57760@gmail.com>"},"accepted":{"arrayValue":{"values":[{"stringValue":"tristan.varewijck@gmail.com"}]}}}}},"endTime":{"timestampValue":"2023-04-11T11:45:33.669Z"},"attempts":{"integerValue":"1"}}}}},"createTime":"2023-04-11T11:45:32.198496Z","updateTime":"2023-04-11T11:45:33.682814Z"},"updateMask":{}},"context":{"eventId":"265d794a-4458-4436-9485-af9375d9ec60","timestamp":"2023-04-11T14:14:53.630Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"test subject\"},\"html\":{\"stringValue\":\"<p> test html </p>\"},\"text\":{\"stringValue\":\"test text\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T11:45:32.325Z\"},\"error\":{\"nullValue\":null},\"leaseExpireTime\":{\"nullValue\":null},\"state\":{\"stringValue\":\"SUCCESS\"},\"info\":{\"mapValue\":{\"fields\":{\"rejected\":{\"arrayValue\":{}},\"response\":{\"stringValue\":\"250 Ok: queued as 545e-KzoRsaUD-vLs-b6qg\"},\"pending\":{\"arrayValue\":{}},\"messageId\":{\"stringValue\":\"<9c8f1679-1aea-b4cc-4f8d-a7bb2fe57760@gmail.com>\"},\"accepted\":{\"arrayValue\":{\"values\":[{\"stringValue\":\"tristan.varewijck@gmail.com\"}]}}}}},\"endTime\":{\"timestampValue\":\"2023-04-11T11:45:33.669Z\"},\"attempts\":{\"integerValue\":\"1\"}}}}},\"createTime\":\"2023-04-11T11:45:32.198496Z\",\"updateTime\":\"2023-04-11T11:45:33.682814Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"265d794a-4458-4436-9485-af9375d9ec60\",\"timestamp\":\"2023-04-11T14:14:53.630Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/GF0sOyUQhuQuLsolLLjt\"}}"}}
[info] >  {"severity":"WARNING","message":"Snapshot has no readTime. Using now()"} {"user":{"severity":"WARNING","message":"Snapshot has no readTime. Using now()"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"Snapshot has no readTime. Using now()\"}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:14:53.989Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:14:53.990Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 91.597585ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 91.597585ms"}}
[debug] [2023-04-11T14:14:53.994Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:14:53.994Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:14:53.994Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:14:54.002Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:14:54.002Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:14:54.003Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:14:54.003Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:14:54.006Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:14:54.007Z] [runtime-status] [2708] RunBackground {"data":{"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards</p>\n        <p>The Goodlife Guide</p>\n\n        <footer>The Goodlife guide</footer>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:00:34.607Z"},"error":{"nullValue":null},"leaseExpireTime":{"nullValue":null},"state":{"stringValue":"SUCCESS"},"info":{"mapValue":{"fields":{"rejected":{"arrayValue":{}},"response":{"stringValue":"250 Ok: queued as Gpo9AWDvSTiyVjilprAzTw"},"pending":{"arrayValue":{}},"messageId":{"stringValue":"<92187618-49be-8608-bdca-f04bff1a3706@gmail.com>"},"accepted":{"arrayValue":{"values":[{"stringValue":"tristan.varewijck@gmail.com"}]}}}}},"endTime":{"timestampValue":"2023-04-11T14:00:35.816Z"},"attempts":{"integerValue":"1"}}}}},"createTime":"2023-04-11T14:00:34.331227Z","updateTime":"2023-04-11T14:00:35.821340Z"},"updateMask":{}},"context":{"eventId":"0dfacb9c-61fc-421c-a970-ea167276b5c8","timestamp":"2023-04-11T14:14:53.630Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards</p>\\n        <p>The Goodlife Guide</p>\\n\\n        <footer>The Goodlife guide</footer>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:00:34.607Z\"},\"error\":{\"nullValue\":null},\"leaseExpireTime\":{\"nullValue\":null},\"state\":{\"stringValue\":\"SUCCESS\"},\"info\":{\"mapValue\":{\"fields\":{\"rejected\":{\"arrayValue\":{}},\"response\":{\"stringValue\":\"250 Ok: queued as Gpo9AWDvSTiyVjilprAzTw\"},\"pending\":{\"arrayValue\":{}},\"messageId\":{\"stringValue\":\"<92187618-49be-8608-bdca-f04bff1a3706@gmail.com>\"},\"accepted\":{\"arrayValue\":{\"values\":[{\"stringValue\":\"tristan.varewijck@gmail.com\"}]}}}}},\"endTime\":{\"timestampValue\":\"2023-04-11T14:00:35.816Z\"},\"attempts\":{\"integerValue\":\"1\"}}}}},\"createTime\":\"2023-04-11T14:00:34.331227Z\",\"updateTime\":\"2023-04-11T14:00:35.821340Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"0dfacb9c-61fc-421c-a970-ea167276b5c8\",\"timestamp\":\"2023-04-11T14:14:53.630Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/9gyKreFdGI5RdJkgFAt8zvsNbpTK\"}}"}}
[info] >  {"severity":"WARNING","message":"Snapshot has no readTime. Using now()"} {"user":{"severity":"WARNING","message":"Snapshot has no readTime. Using now()"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"Snapshot has no readTime. Using now()\"}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[debug] [2023-04-11T14:14:54.030Z] Apr 11, 2023 4:14:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:14:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:14:54.046Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:14:54.046Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 37.522132ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 37.522132ms"}}
[debug] [2023-04-11T14:15:13.339Z] Apr 11, 2023 4:15:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:15:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:15:13.361Z] Apr 11, 2023 4:15:13 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:15:13 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:15:19.515Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast [none]
[debug] [2023-04-11T14:15:19.515Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"eventId":"c03e15bf-182d-4a9e-8ece-f0fd4c1324dc","eventType":"providers/firebase.auth/eventTypes/user.create","resource":{"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"},"params":{},"timestamp":"2023-04-11T14:15:19.515Z","data":{"uid":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe","email":"tristan.varewijck@gmail.com","emailVerified":false,"metadata":{"creationTime":"2023-04-11T14:15:19.514Z","lastSignInTime":"2023-04-11T14:15:19.514Z"},"customClaims":{},"providerData":[{"providerId":"password","email":"tristan.varewijck@gmail.com","federatedId":"tristan.varewijck@gmail.com","rawId":"tristan.varewijck@gmail.com"}]}}
[debug] [2023-04-11T14:15:19.520Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:15:19.520Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:15:19.521Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[debug] [2023-04-11T14:15:19.522Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast 200
[debug] [2023-04-11T14:15:19.522Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/tickety-85fd7/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-04-11T14:15:19.523Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:15:19.524Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:15:19.524Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0 --> us-central1-onCreateUser-0
[debug] [2023-04-11T14:15:19.526Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:15:19.527Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-onCreateUser-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:15:19.527Z] [worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0"}}
[debug] [2023-04-11T14:15:19.539Z] [worker-pool] addWorker(us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:15:19.540Z] [worker-pool] Adding worker with key us-central1-onCreateUser, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-onCreateUser, total=1"}}
[debug] [2023-04-11T14:15:21.779Z] [runtime-status] [4072] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:15:21.780Z] [runtime-status] [4072] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:15:21.781Z] [runtime-status] [4072] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T14:15:21.782Z] [runtime-status] [4072] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:15:22.132Z] [runtime-status] [4072] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T14:15:22.132Z] [runtime-status] [4072] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T14:15:22.135Z] [runtime-status] [4072] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:15:22.135Z] [runtime-status] [4072] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:15:22.139Z] [runtime-status] [4072] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:15:22.139Z] [runtime-status] [4072] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T14:15:22.143Z] [runtime-status] [4072] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[debug] [2023-04-11T14:15:22.535Z] [runtime-status] [4072] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T14:15:22.535Z] [runtime-status] [4072] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_5fd705cadd93ee9d.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_5fd705cadd93ee9d.sock"}}
[debug] [2023-04-11T14:15:22.640Z] [worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: IDLE"}}
[debug] [2023-04-11T14:15:22.640Z] [worker-pool] submitRequest(triggerId=us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:15:22.640Z] [worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: BUSY"}}
[info] i  functions: Beginning execution of "onCreateUser" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Beginning execution of \"onCreateUser\""}}
[debug] [2023-04-11T14:15:22.657Z] [runtime-status] [4072] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7","service":"firebaseauth.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7\",\"service\":\"firebaseauth.googleapis.com\"}"}}
[debug] [2023-04-11T14:15:22.658Z] [runtime-status] [4072] RunBackground {"data":{"uid":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe","email":"tristan.varewijck@gmail.com","emailVerified":false,"metadata":{"creationTime":"2023-04-11T14:15:19.514Z","lastSignInTime":"2023-04-11T14:15:19.514Z"},"customClaims":{},"providerData":[{"providerId":"password","email":"tristan.varewijck@gmail.com","federatedId":"tristan.varewijck@gmail.com","rawId":"tristan.varewijck@gmail.com"}]},"context":{"eventId":"c03e15bf-182d-4a9e-8ece-f0fd4c1324dc","eventType":"providers/firebase.auth/eventTypes/user.create","resource":"projects/tickety-85fd7","params":{},"timestamp":"2023-04-11T14:15:19.515Z"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"[runtime-status] [4072] RunBackground {\"data\":{\"uid\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"email\":\"tristan.varewijck@gmail.com\",\"emailVerified\":false,\"metadata\":{\"creationTime\":\"2023-04-11T14:15:19.514Z\",\"lastSignInTime\":\"2023-04-11T14:15:19.514Z\"},\"customClaims\":{},\"providerData\":[{\"providerId\":\"password\",\"email\":\"tristan.varewijck@gmail.com\",\"federatedId\":\"tristan.varewijck@gmail.com\",\"rawId\":\"tristan.varewijck@gmail.com\"}]},\"context\":{\"eventId\":\"c03e15bf-182d-4a9e-8ece-f0fd4c1324dc\",\"eventType\":\"providers/firebase.auth/eventTypes/user.create\",\"resource\":\"projects/tickety-85fd7\",\"params\":{},\"timestamp\":\"2023-04-11T14:15:19.515Z\"}}"}}
[debug] [2023-04-11T14:15:23.163Z] Apr 11, 2023 4:15:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:15:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:15:23.202Z] [work-queue] {"queueLength":1,"workRunningCount":1}
[debug] [2023-04-11T14:15:23.202Z] [work-queue] {"queueLength":0,"workRunningCount":2}
[debug] [2023-04-11T14:15:23.202Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:15:23.205Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:15:23.205Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:15:23.205Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:15:23.205Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:15:23.208Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:15:23.208Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}}},"createTime":"2023-04-11T14:15:23.191610Z","updateTime":"2023-04-11T14:15:23.191610Z"},"updateMask":{}},"context":{"eventId":"de292288-44a2-443d-a199-cd771e2d4590","timestamp":"2023-04-11T14:15:23.191Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}}},\"createTime\":\"2023-04-11T14:15:23.191610Z\",\"updateTime\":\"2023-04-11T14:15:23.191610Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"de292288-44a2-443d-a199-cd771e2d4590\",\"timestamp\":\"2023-04-11T14:15:23.191Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"WARNING","message":"message=mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe is missing 'delivery' field"} {"user":{"severity":"WARNING","message":"message=mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe is missing 'delivery' field"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"WARNING\",\"message\":\"message=mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe is missing 'delivery' field\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:15:23.245Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:15:23.245Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[info] i  functions: Finished "processQueue" in 34.321805ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 34.321805ms"}}
[debug] [2023-04-11T14:15:23.248Z] [work-queue] {"queueLength":1,"workRunningCount":1}
[debug] [2023-04-11T14:15:23.248Z] [work-queue] {"queueLength":0,"workRunningCount":2}
[debug] [2023-04-11T14:15:23.248Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:15:23.251Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:15:23.251Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:15:23.251Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:15:23.251Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:15:23.255Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:15:23.256Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:15:23.220Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T14:15:23.191610Z","updateTime":"2023-04-11T14:15:23.224468Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}}},"createTime":"2023-04-11T14:15:23.191610Z","updateTime":"2023-04-11T14:15:23.191610Z"},"updateMask":{}},"context":{"eventId":"1a3f0860-e21a-446f-b7d0-8b6922eded90","timestamp":"2023-04-11T14:15:23.224Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:15:23.220Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T14:15:23.191610Z\",\"updateTime\":\"2023-04-11T14:15:23.224468Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}}},\"createTime\":\"2023-04-11T14:15:23.191610Z\",\"updateTime\":\"2023-04-11T14:15:23.191610Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"1a3f0860-e21a-446f-b7d0-8b6922eded90\",\"timestamp\":\"2023-04-11T14:15:23.224Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[debug] [2023-04-11T14:15:23.263Z] [worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: IDLE"}}
[debug] [2023-04-11T14:15:23.263Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[info] i  functions: Finished "onCreateUser" in 605.648626ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-onCreateUser"},"extension":{},"message":"Finished \"onCreateUser\" in 605.648626ms"}}
[info] >  {"severity":"INFO","message":"Attempting delivery for message: mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"} {"user":{"severity":"INFO","message":"Attempting delivery for message: mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Attempting delivery for message: mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}"}}
[info] >  {"severity":"INFO","message":"Delivered message: mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe successfully. messageId: <37b828b7-9d06-e475-f9da-3ccab3523527@gmail.com> accepted: 1 rejected: 0 pending: 0"} {"user":{"severity":"INFO","message":"Delivered message: mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe successfully. messageId: <37b828b7-9d06-e475-f9da-3ccab3523527@gmail.com> accepted: 1 rejected: 0 pending: 0"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Delivered message: mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe successfully. messageId: <37b828b7-9d06-e475-f9da-3ccab3523527@gmail.com> accepted: 1 rejected: 0 pending: 0\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:15:24.121Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:15:24.121Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 865.795636ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 865.795636ms"}}
[debug] [2023-04-11T14:15:24.123Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:15:24.123Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:15:24.123Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:15:24.125Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:15:24.125Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:15:24.125Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:15:24.125Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:15:24.128Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:15:24.130Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:15:23.220Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T14:16:23.270Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T14:15:23.191610Z","updateTime":"2023-04-11T14:15:23.277498Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:15:23.220Z"},"state":{"stringValue":"PENDING"},"error":{"nullValue":null},"attempts":{"integerValue":"0"}}}}},"createTime":"2023-04-11T14:15:23.191610Z","updateTime":"2023-04-11T14:15:23.224468Z"},"updateMask":{}},"context":{"eventId":"c4c40f7e-adae-456b-9b39-87200287e87c","timestamp":"2023-04-11T14:15:23.277Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:15:23.220Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T14:16:23.270Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T14:15:23.191610Z\",\"updateTime\":\"2023-04-11T14:15:23.277498Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:15:23.220Z\"},\"state\":{\"stringValue\":\"PENDING\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"}}}}},\"createTime\":\"2023-04-11T14:15:23.191610Z\",\"updateTime\":\"2023-04-11T14:15:23.224468Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"c4c40f7e-adae-456b-9b39-87200287e87c\",\"timestamp\":\"2023-04-11T14:15:23.277Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:15:24.158Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:15:24.159Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 31.194987ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 31.194987ms"}}
[debug] [2023-04-11T14:15:24.161Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:15:24.161Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:15:24.161Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0 --> us-central1-ext-firestore-send-email-processQueue-0
[debug] [2023-04-11T14:15:24.163Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:15:24.164Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-ext-firestore-send-email-processQueue-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:15:24.164Z] [worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-ext-firestore-send-email-processQueue)"}}
[debug] [2023-04-11T14:15:24.164Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: BUSY"}}
[info] i  functions: Beginning execution of "processQueue" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Beginning execution of \"processQueue\""}}
[debug] [2023-04-11T14:15:24.171Z] [runtime-status] [2708] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:15:24.172Z] [runtime-status] [2708] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:15:23.220Z"},"error":{"nullValue":null},"leaseExpireTime":{"nullValue":null},"state":{"stringValue":"SUCCESS"},"info":{"mapValue":{"fields":{"rejected":{"arrayValue":{}},"response":{"stringValue":"250 Ok: queued as NNyg_G-OQTeH0wq1vFyxAg"},"pending":{"arrayValue":{}},"messageId":{"stringValue":"<37b828b7-9d06-e475-f9da-3ccab3523527@gmail.com>"},"accepted":{"arrayValue":{"values":[{"stringValue":"tristan.varewijck@gmail.com"}]}}}}},"endTime":{"timestampValue":"2023-04-11T14:15:24.101Z"},"attempts":{"integerValue":"1"}}}}},"createTime":"2023-04-11T14:15:23.191610Z","updateTime":"2023-04-11T14:15:24.104423Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"to":{"stringValue":"tristan.varewijck@gmail.com"},"message":{"mapValue":{"fields":{"subject":{"stringValue":"Welcome to The Goodlife Guide"},"html":{"stringValue":"<div>\n        <h1>Welcome to our community!</h1>\n        <p> Hey there,\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\n            Thanks again for joining us! We can't wait to share our love of reading with you.\n        </p>\n        <p>Best regards,</p>\n        <p>The Goodlife Guide</p>\n    </div>"}}}},"delivery":{"mapValue":{"fields":{"startTime":{"timestampValue":"2023-04-11T14:15:23.220Z"},"error":{"nullValue":null},"attempts":{"integerValue":"0"},"leaseExpireTime":{"timestampValue":"2023-04-11T14:16:23.270Z"},"state":{"stringValue":"PROCESSING"}}}}},"createTime":"2023-04-11T14:15:23.191610Z","updateTime":"2023-04-11T14:15:23.277498Z"},"updateMask":{}},"context":{"eventId":"715059f2-3fef-4bb2-a86a-c5e25a213b52","timestamp":"2023-04-11T14:15:24.104Z","eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"[runtime-status] [2708] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:15:23.220Z\"},\"error\":{\"nullValue\":null},\"leaseExpireTime\":{\"nullValue\":null},\"state\":{\"stringValue\":\"SUCCESS\"},\"info\":{\"mapValue\":{\"fields\":{\"rejected\":{\"arrayValue\":{}},\"response\":{\"stringValue\":\"250 Ok: queued as NNyg_G-OQTeH0wq1vFyxAg\"},\"pending\":{\"arrayValue\":{}},\"messageId\":{\"stringValue\":\"<37b828b7-9d06-e475-f9da-3ccab3523527@gmail.com>\"},\"accepted\":{\"arrayValue\":{\"values\":[{\"stringValue\":\"tristan.varewijck@gmail.com\"}]}}}}},\"endTime\":{\"timestampValue\":\"2023-04-11T14:15:24.101Z\"},\"attempts\":{\"integerValue\":\"1\"}}}}},\"createTime\":\"2023-04-11T14:15:23.191610Z\",\"updateTime\":\"2023-04-11T14:15:24.104423Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"to\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"message\":{\"mapValue\":{\"fields\":{\"subject\":{\"stringValue\":\"Welcome to The Goodlife Guide\"},\"html\":{\"stringValue\":\"<div>\\n        <h1>Welcome to our community!</h1>\\n        <p> Hey there,\\n            Thanks for signing up with The Goodlife Guide! We're excited to have you join our community.\\n            Our app is all about providing a fun and engaging reading experience while rewarding you with points that you can use to get discounts on products in our shop.\\n            As you explore our website, you'll find a wide range of interesting articles on various topics that are sure to grab your attention. And if you ever have any questions or feedback, just shoot us an email at [Contact Email].\\n            Make sure to follow us on our social media channels [list your social media handles] to stay in the loop on our latest news, updates, and promotions.\\n            Thanks again for joining us! We can't wait to share our love of reading with you.\\n        </p>\\n        <p>Best regards,</p>\\n        <p>The Goodlife Guide</p>\\n    </div>\"}}}},\"delivery\":{\"mapValue\":{\"fields\":{\"startTime\":{\"timestampValue\":\"2023-04-11T14:15:23.220Z\"},\"error\":{\"nullValue\":null},\"attempts\":{\"integerValue\":\"0\"},\"leaseExpireTime\":{\"timestampValue\":\"2023-04-11T14:16:23.270Z\"},\"state\":{\"stringValue\":\"PROCESSING\"}}}}},\"createTime\":\"2023-04-11T14:15:23.191610Z\",\"updateTime\":\"2023-04-11T14:15:23.277498Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"715059f2-3fef-4bb2-a86a-c5e25a213b52\",\"timestamp\":\"2023-04-11T14:15:24.104Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.write\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/mail/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  {"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"location":"us-central1","mailCollection":"mail","smtpConnectionUri":"<omitted>","smtpPassword":"<omitted>","defaultFrom":"tristan.varewijck@gmail.com","testing":false,"TTLExpireType":"never","TTLExpireValue":1,"severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"location\":\"us-central1\",\"mailCollection\":\"mail\",\"smtpConnectionUri\":\"<omitted>\",\"smtpPassword\":\"<omitted>\",\"defaultFrom\":\"tristan.varewijck@gmail.com\",\"testing\":false,\"TTLExpireType\":\"never\",\"TTLExpireValue\":1,\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[debug] [2023-04-11T14:15:24.174Z] [worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-ext-firestore-send-email-processQueue-816740d0-06c6-43b5-9493-6df4a635cbac]: IDLE"}}
[debug] [2023-04-11T14:15:24.174Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "processQueue" in 4.318118ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-ext-firestore-send-email-processQueue"},"extension":{"instanceId":"firestore-send-email","ref":"firebase/firestore-send-email@0.1.25"},"message":"Finished \"processQueue\" in 4.318118ms"}}
[debug] [2023-04-11T14:16:48.692Z] Apr 11, 2023 4:16:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:48.729Z] Apr 11, 2023 4:16:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:48.892Z] Apr 11, 2023 4:16:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:50.139Z] Apr 11, 2023 4:16:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:50.207Z] Apr 11, 2023 4:16:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:55.259Z] Apr 11, 2023 4:16:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:55.297Z] Apr 11, 2023 4:16:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:55.309Z] Apr 11, 2023 4:16:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:16:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:16:55.325Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:16:55.325Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:16:55.325Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 --> us-central1-updateAdminCustomClaim-0
[debug] [2023-04-11T14:16:55.331Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:16:55.331Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:16:55.341Z] [worker-pool] addWorker(us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:16:55.342Z] [worker-pool] Adding worker with key us-central1-updateAdminCustomClaim, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-updateAdminCustomClaim, total=1"}}
[debug] [2023-04-11T14:16:57.601Z] [runtime-status] [4114] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:16:57.607Z] [runtime-status] [4114] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:16:57.609Z] [runtime-status] [4114] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T14:16:57.610Z] [runtime-status] [4114] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:16:58.077Z] [runtime-status] [4114] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T14:16:58.078Z] [runtime-status] [4114] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T14:16:58.078Z] [runtime-status] [4114] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:16:58.079Z] [runtime-status] [4114] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:16:58.083Z] [runtime-status] [4114] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:16:58.084Z] [runtime-status] [4114] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T14:16:58.087Z] [runtime-status] [4114] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[debug] [2023-04-11T14:16:58.486Z] [runtime-status] [4114] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T14:16:58.486Z] [runtime-status] [4114] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_a4cdb3353c11b7c4.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_a4cdb3353c11b7c4.sock"}}
[debug] [2023-04-11T14:16:58.536Z] [worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: IDLE"}}
[debug] [2023-04-11T14:16:58.536Z] [worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:16:58.536Z] [worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: BUSY"}}
[info] i  functions: Beginning execution of "updateAdminCustomClaim" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Beginning execution of \"updateAdminCustomClaim\""}}
[debug] [2023-04-11T14:16:58.556Z] [runtime-status] [4114] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:16:58.556Z] [runtime-status] [4114] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"email":{"stringValue":"tristan.varewijck@gmail.com"},"admin":{"booleanValue":true}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:16:55.314977Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"admin":{"booleanValue":false},"email":{"stringValue":"tristan.varewijck@gmail.com"}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:15:23.173200Z"},"updateMask":{}},"context":{"eventId":"5b8d9f64-c063-4d9c-8733-48f30b271875","timestamp":"2023-04-11T14:16:55.314Z","eventType":"providers/cloud.firestore/eventTypes/document.update","resource":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4114] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"admin\":{\"booleanValue\":true}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:16:55.314977Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"admin\":{\"booleanValue\":false},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:15:23.173200Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"5b8d9f64-c063-4d9c-8733-48f30b271875\",\"timestamp\":\"2023-04-11T14:16:55.314Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.update\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  m5VT3iCPTKyXYgwTa2NJrOrQjHhe {"user":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe","metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"\u001b[90m> \u001b[39m m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}}
[debug] [2023-04-11T14:16:58.587Z] [worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: IDLE"}}
[debug] [2023-04-11T14:16:58.587Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "updateAdminCustomClaim" in 34.256349ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Finished \"updateAdminCustomClaim\" in 34.256349ms"}}
[debug] [2023-04-11T14:17:55.343Z] Apr 11, 2023 4:17:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 4:17:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:17:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 4:17:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:17:55.878Z] Apr 11, 2023 4:17:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:17:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:17:55.888Z] Apr 11, 2023 4:17:55 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:17:55 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:18:40.868Z] Apr 11, 2023 4:18:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:18:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:18:47.856Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:18:48.863Z] Validating nodejs source
[debug] [2023-04-11T14:18:52.564Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:18:52.661Z] Building nodejs source
[debug] [2023-04-11T14:18:52.661Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:18:52.663Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:18:53.064Z] Serving at port 9006

[debug] [2023-04-11T14:18:53.699Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:18:53.704Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:18:53.718Z] [worker-pool] Shutting down IDLE worker (us-central1-onCreateUser) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Shutting down IDLE worker (us-central1-onCreateUser)"}}
[debug] [2023-04-11T14:18:53.719Z] [worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: FINISHING {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: FINISHING"}}
[debug] [2023-04-11T14:18:53.719Z] [worker-pool] Shutting down IDLE worker (us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Shutting down IDLE worker (us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:18:53.719Z] [worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: FINISHING {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: FINISHING"}}
[debug] [2023-04-11T14:18:53.734Z] [worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: exited {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: exited"}}
[debug] [2023-04-11T14:18:53.734Z] [worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: FINISHED {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-onCreateUser-bd4cb85a-1c69-4cdf-ac30-bcc3014c60fc]: FINISHED"}}
[debug] [2023-04-11T14:18:53.735Z] [worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: exited {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: exited"}}
[debug] [2023-04-11T14:18:53.735Z] [worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: FINISHED {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-9558e7d8-08a0-4a87-86ef-fda5fa0d75f1]: FINISHED"}}
[debug] [2023-04-11T14:19:23.217Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:19:24.219Z] Validating nodejs source
[debug] [2023-04-11T14:19:26.539Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:19:26.597Z] Building nodejs source
[debug] [2023-04-11T14:19:26.598Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:19:26.600Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:19:26.875Z] Apr 11, 2023 4:19:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:19:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:19:26.908Z] Serving at port 9006

[debug] [2023-04-11T14:19:27.575Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:19:27.582Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:19:28.963Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:19:29.064Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:19:30.073Z] Validating nodejs source
[debug] [2023-04-11T14:19:33.424Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:19:33.467Z] Building nodejs source
[debug] [2023-04-11T14:19:33.467Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:19:33.468Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:19:33.468Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:19:33.865Z] Serving at port 9006

[debug] [2023-04-11T14:19:34.409Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:19:34.417Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:19:34.469Z] Validating nodejs source
[debug] [2023-04-11T14:19:36.436Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:19:36.447Z] Building nodejs source
[debug] [2023-04-11T14:19:36.447Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:19:36.452Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:19:36.713Z] Serving at port 9006

[debug] [2023-04-11T14:19:37.135Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:19:37.143Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:20:12.872Z] Apr 11, 2023 4:20:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:20:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:20:27.172Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:20:28.174Z] Validating nodejs source
[debug] [2023-04-11T14:20:30.589Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:20:30.644Z] Building nodejs source
[debug] [2023-04-11T14:20:30.645Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:20:30.646Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:20:30.881Z] Serving at port 9006

[debug] [2023-04-11T14:20:31.784Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:20:31.789Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:20:54.681Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:20:55.685Z] Validating nodejs source
[debug] [2023-04-11T14:20:58.373Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:20:58.408Z] Building nodejs source
[debug] [2023-04-11T14:20:58.408Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:20:58.409Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:20:58.670Z] Serving at port 9006

[debug] [2023-04-11T14:20:59.387Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:20:59.393Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:20:59.595Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:20:59.695Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:21:00.701Z] Validating nodejs source
[debug] [2023-04-11T14:21:03.491Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:21:03.523Z] Building nodejs source
[debug] [2023-04-11T14:21:03.523Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:21:03.524Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:21:03.883Z] Serving at port 9006

[debug] [2023-04-11T14:21:04.546Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:21:04.550Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:21:12.926Z] Apr 11, 2023 4:21:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:21:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:01.881Z] Apr 11, 2023 4:22:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:01.892Z] Apr 11, 2023 4:22:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 4:22:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 4:22:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:05.994Z] Apr 11, 2023 4:22:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:06.018Z] Apr 11, 2023 4:22:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:06.026Z] Apr 11, 2023 4:22:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:06.057Z] Apr 11, 2023 4:22:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:06.059Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:22:06.059Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:22:06.060Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 --> us-central1-updateAdminCustomClaim-0
[debug] [2023-04-11T14:22:06.065Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:22:06.065Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:22:06.066Z] [worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Cleaned up workers for us-central1-onCreateUser: 1 --> 0"}}
[debug] [2023-04-11T14:22:06.066Z] [worker-pool] Cleaned up workers for us-central1-updateAdminCustomClaim: 1 --> 0 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Cleaned up workers for us-central1-updateAdminCustomClaim: 1 --> 0"}}
[debug] [2023-04-11T14:22:06.083Z] [worker-pool] addWorker(us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:22:06.083Z] [worker-pool] Adding worker with key us-central1-updateAdminCustomClaim, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-updateAdminCustomClaim, total=1"}}
[debug] [2023-04-11T14:22:08.235Z] [runtime-status] [4287] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:22:08.236Z] [runtime-status] [4287] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:22:08.237Z] [runtime-status] [4287] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T14:22:08.238Z] [runtime-status] [4287] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:22:08.712Z] [runtime-status] [4287] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T14:22:08.712Z] [runtime-status] [4287] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T14:22:08.712Z] [runtime-status] [4287] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:22:08.713Z] [runtime-status] [4287] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:22:08.718Z] [runtime-status] [4287] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:22:08.719Z] [runtime-status] [4287] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T14:22:08.722Z] [runtime-status] [4287] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[debug] [2023-04-11T14:22:09.098Z] [runtime-status] [4287] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T14:22:09.098Z] [runtime-status] [4287] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_e3981750bb0dd9b6.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_e3981750bb0dd9b6.sock"}}
[debug] [2023-04-11T14:22:09.161Z] [worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: IDLE"}}
[debug] [2023-04-11T14:22:09.161Z] [worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:22:09.162Z] [worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: BUSY"}}
[info] i  functions: Beginning execution of "updateAdminCustomClaim" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Beginning execution of \"updateAdminCustomClaim\""}}
[debug] [2023-04-11T14:22:09.178Z] [runtime-status] [4287] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:22:09.179Z] [runtime-status] [4287] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"email":{"stringValue":"tristan.varewijck@gmail.com"},"admin":{"booleanValue":false}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:22:06.035634Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"email":{"stringValue":"tristan.varewijck@gmail.com"},"admin":{"booleanValue":true}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:16:55.314977Z"},"updateMask":{}},"context":{"eventId":"32415ad9-feae-4741-a0e6-aaf97a3c46f3","timestamp":"2023-04-11T14:22:06.035Z","eventType":"providers/cloud.firestore/eventTypes/document.update","resource":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4287] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"admin\":{\"booleanValue\":false}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:22:06.035634Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"admin\":{\"booleanValue\":true}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:16:55.314977Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"32415ad9-feae-4741-a0e6-aaf97a3c46f3\",\"timestamp\":\"2023-04-11T14:22:06.035Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.update\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  {"severity":"ERROR","message":"Error: User session revoked\n    at entryFromArgs (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/logger/index.js:130:19)\n    at Object.error (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/logger/index.js:116:11)\n    at /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:163:26\n    at cloudFunction (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/cloud-functions.js:79:23)\n    at /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:516:16\n    at runFunction (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:504:15)\n    at runBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:515:11)\n    at processBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:499:11)\n    at /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:690:27\n    at Layer.handle [as handle_request] (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/node_modules/express/lib/router/layer.js:95:5)"} {"user":{"severity":"ERROR","message":"Error: User session revoked\n    at entryFromArgs (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/logger/index.js:130:19)\n    at Object.error (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/logger/index.js:116:11)\n    at /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:163:26\n    at cloudFunction (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/cloud-functions.js:79:23)\n    at /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:516:16\n    at runFunction (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:504:15)\n    at runBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:515:11)\n    at processBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:499:11)\n    at /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:690:27\n    at Layer.handle [as handle_request] (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/node_modules/express/lib/router/layer.js:95:5)"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"\u001b[90m> \u001b[39m {\"severity\":\"ERROR\",\"message\":\"Error: User session revoked\\n    at entryFromArgs (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/logger/index.js:130:19)\\n    at Object.error (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/logger/index.js:116:11)\\n    at /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js:163:26\\n    at cloudFunction (/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/cloud-functions.js:79:23)\\n    at /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:516:16\\n    at runFunction (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:504:15)\\n    at runBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:515:11)\\n    at processBackground (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:499:11)\\n    at /Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/lib/emulator/functionsEmulatorRuntime.js:690:27\\n    at Layer.handle [as handle_request] (/Users/tristanvarewijck/.nvm/versions/node/v16.18.0/lib/node_modules/firebase-tools/node_modules/express/lib/router/layer.js:95:5)\"}"}}
[debug] [2023-04-11T14:22:09.210Z] [worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: IDLE"}}
[debug] [2023-04-11T14:22:09.210Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "updateAdminCustomClaim" in 31.995791ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Finished \"updateAdminCustomClaim\" in 31.995791ms"}}
[debug] [2023-04-11T14:22:40.987Z] Apr 11, 2023 4:22:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:40.989Z] Apr 11, 2023 4:22:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:22:41.016Z] Apr 11, 2023 4:22:41 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:41 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:22:41.027Z] Apr 11, 2023 4:22:41 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:22:41 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:23:10.838Z] File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers {"metadata":{"emulator":{"name":"functions"},"message":"File /Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/index.js changed, reloading triggers"}}
[debug] [2023-04-11T14:23:11.840Z] Validating nodejs source
[debug] [2023-04-11T14:23:14.268Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.2.0",
    "jsdom": "^21.1.1",
    "puppeteer": "^19.8.3",
    "puppeteer-extra": "^3.3.6",
    "puppeteer-extra-plugin-recaptcha": "^3.6.8",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "user-agents": "^1.0.1340"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.0.0"
  },
  "private": true
}
[debug] [2023-04-11T14:23:14.357Z] Building nodejs source
[debug] [2023-04-11T14:23:14.357Z] Analyzing nodejs backend spec
[debug] [2023-04-11T14:23:14.364Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-04-11T14:23:14.819Z] Serving at port 9006

[debug] [2023-04-11T14:23:15.982Z] Got response from /__/functions.yaml {"endpoints":{"crawlWithPuppeteer":{"platform":"gcfv1","availableMemoryMb":1024,"timeoutSeconds":300,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"crawlWithPuppeteer"},"onCreateUser":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/firebase.auth/eventTypes/user.create","eventFilters":{"resource":"projects/tickety-85fd7"},"retry":false},"labels":{},"entryPoint":"onCreateUser"},"updateAdminCustomClaim":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.update","eventFilters":{"resource":"projects/tickety-85fd7/databases/(default)/documents/users/{userId}"},"retry":false},"labels":{},"entryPoint":"updateAdminCustomClaim"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-04-11T14:23:15.992Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: crawlWithPuppeteer, onCreateUser, updateAdminCustomClaim."}}
[debug] [2023-04-11T14:23:16.004Z] [worker-pool] Shutting down IDLE worker (us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Shutting down IDLE worker (us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:23:16.004Z] [worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: FINISHING {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: FINISHING"}}
[debug] [2023-04-11T14:23:16.017Z] [worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: exited {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: exited"}}
[debug] [2023-04-11T14:23:16.017Z] [worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: FINISHED {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-5c7d805f-1201-4338-b0cc-61cf591d29b1]: FINISHED"}}
[debug] [2023-04-11T14:28:28.140Z] Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:28.144Z] Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:28.249Z] Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:28.363Z] Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:30.646Z] Apr 11, 2023 4:28:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:30.760Z] Apr 11, 2023 4:28:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:35.303Z] Apr 11, 2023 4:28:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:35.322Z] Apr 11, 2023 4:28:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:35.339Z] Apr 11, 2023 4:28:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:28:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:28:35.367Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:28:35.367Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:28:35.367Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 --> us-central1-updateAdminCustomClaim-0
[debug] [2023-04-11T14:28:35.380Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:28:35.380Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:28:35.381Z] [worker-pool] Cleaned up workers for us-central1-updateAdminCustomClaim: 1 --> 0 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Cleaned up workers for us-central1-updateAdminCustomClaim: 1 --> 0"}}
[debug] [2023-04-11T14:28:35.397Z] [worker-pool] addWorker(us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:28:35.397Z] [worker-pool] Adding worker with key us-central1-updateAdminCustomClaim, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key us-central1-updateAdminCustomClaim, total=1"}}
[debug] [2023-04-11T14:28:37.646Z] [runtime-status] [4564] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:28:37.647Z] [runtime-status] [4564] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:28:37.647Z] [runtime-status] [4564] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-04-11T14:28:37.648Z] [runtime-status] [4564] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:28:38.127Z] [runtime-status] [4564] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-04-11T14:28:38.127Z] [runtime-status] [4564] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}}"}}
[debug] [2023-04-11T14:28:38.128Z] [runtime-status] [4564] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:28:38.129Z] [runtime-status] [4564] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-04-11T14:28:38.133Z] [runtime-status] [4564] Resolved module firebase-functions {"declared":true,"installed":true,"version":"4.2.1","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"4.2.1\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-functions/lib/v1/index.js\"}"}}
[debug] [2023-04-11T14:28:38.133Z] [runtime-status] [4564] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-04-11T14:28:38.137Z] [runtime-status] [4564] initializeApp(DEFAULT) {"storageBucket":"tickety-85fd7.appspot.com","projectId":"tickety-85fd7"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] initializeApp(DEFAULT) {\"storageBucket\":\"tickety-85fd7.appspot.com\",\"projectId\":\"tickety-85fd7\"}"}}
[debug] [2023-04-11T14:28:38.527Z] [runtime-status] [4564] Functions runtime initialized. {"cwd":"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions","node_version":"16.18.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Functions runtime initialized. {\"cwd\":\"/Users/tristanvarewijck/Desktop/tickety-phase2/website/my-app/functions\",\"node_version\":\"16.18.0\"}"}}
[debug] [2023-04-11T14:28:38.527Z] [runtime-status] [4564] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_348e8985dbdf0cd0.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] Listening to port: /var/folders/sf/1xyy74nx7sjg1dhl850ty6sc0000gn/T/fire_emu_348e8985dbdf0cd0.sock"}}
[debug] [2023-04-11T14:28:38.588Z] [worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: IDLE"}}
[debug] [2023-04-11T14:28:38.589Z] [worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:28:38.589Z] [worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: BUSY"}}
[info] i  functions: Beginning execution of "updateAdminCustomClaim" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Beginning execution of \"updateAdminCustomClaim\""}}
[debug] [2023-04-11T14:28:38.630Z] [runtime-status] [4564] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:28:38.631Z] [runtime-status] [4564] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"email":{"stringValue":"tristan.varewijck@gmail.com"},"admin":{"booleanValue":true}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:28:35.351326Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"email":{"stringValue":"tristan.varewijck@gmail.com"},"admin":{"booleanValue":false}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:22:06.035634Z"},"updateMask":{}},"context":{"eventId":"79dc3d01-e81f-4835-9cf6-165d77874e31","timestamp":"2023-04-11T14:28:35.351Z","eventType":"providers/cloud.firestore/eventTypes/document.update","resource":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"admin\":{\"booleanValue\":true}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:28:35.351326Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"admin\":{\"booleanValue\":false}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:22:06.035634Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"79dc3d01-e81f-4835-9cf6-165d77874e31\",\"timestamp\":\"2023-04-11T14:28:35.351Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.update\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  {"severity":"INFO","message":"User session revoked"} {"user":{"severity":"INFO","message":"User session revoked"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"User session revoked\"}"}}
[debug] [2023-04-11T14:28:38.663Z] [worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: IDLE"}}
[debug] [2023-04-11T14:28:38.663Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "updateAdminCustomClaim" in 35.061122ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Finished \"updateAdminCustomClaim\" in 35.061122ms"}}
[debug] [2023-04-11T14:29:35.376Z] Apr 11, 2023 4:29:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:29:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:29:35.376Z] Apr 11, 2023 4:29:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:29:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:29:36.035Z] Apr 11, 2023 4:29:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:29:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:29:36.041Z] Apr 11, 2023 4:29:36 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:29:36 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:30:35.391Z] Apr 11, 2023 4:30:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:30:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:31:35.409Z] Apr 11, 2023 4:31:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:31:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:32:12.990Z] Apr 11, 2023 4:32:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Apr 11, 2023 4:32:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:32:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nApr 11, 2023 4:32:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:32:17.734Z] Apr 11, 2023 4:32:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:32:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:32:17.761Z] Apr 11, 2023 4:32:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:32:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:32:17.774Z] Apr 11, 2023 4:32:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:32:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:32:17.788Z] [work-queue] {"queueLength":1,"workRunningCount":0}
[debug] [2023-04-11T14:32:17.788Z] [work-queue] {"queueLength":0,"workRunningCount":1}
[debug] [2023-04-11T14:32:17.788Z] Accepted request POST /functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0 --> us-central1-updateAdminCustomClaim-0
[debug] [2023-04-11T14:32:17.792Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-04-11T14:32:17.793Z] [functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/tickety-85fd7/triggers/us-central1-updateAdminCustomClaim-0, mapping to path=/functions/projects/"}}
[debug] [2023-04-11T14:32:17.793Z] [worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=us-central1-updateAdminCustomClaim)"}}
[debug] [2023-04-11T14:32:17.793Z] [worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: BUSY"}}
[info] i  functions: Beginning execution of "updateAdminCustomClaim" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Beginning execution of \"updateAdminCustomClaim\""}}
[debug] [2023-04-11T14:32:17.799Z] [runtime-status] [4564] ProcessBackground: lifting resource.name from resource {"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","service":"firestore.googleapis.com"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] ProcessBackground: lifting resource.name from resource {\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"service\":\"firestore.googleapis.com\"}"}}
[debug] [2023-04-11T14:32:17.799Z] [runtime-status] [4564] RunBackground {"data":{"value":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"email":{"stringValue":"tristan.varewijck@gmail.com"},"admin":{"booleanValue":false}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:32:17.778284Z"},"oldValue":{"name":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe","fields":{"uid":{"stringValue":"m5VT3iCPTKyXYgwTa2NJrOrQjHhe"},"photoUrl":{"nullValue":null},"provider":{"stringValue":"password"},"displayName":{"nullValue":null},"email":{"stringValue":"tristan.varewijck@gmail.com"},"admin":{"booleanValue":true}},"createTime":"2023-04-11T14:15:23.173200Z","updateTime":"2023-04-11T14:28:35.351326Z"},"updateMask":{}},"context":{"eventId":"10ed276e-dbcf-4cf6-8960-b4146b221539","timestamp":"2023-04-11T14:32:17.778Z","eventType":"providers/cloud.firestore/eventTypes/document.update","resource":"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"[runtime-status] [4564] RunBackground {\"data\":{\"value\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"admin\":{\"booleanValue\":false}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:32:17.778284Z\"},\"oldValue\":{\"name\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\",\"fields\":{\"uid\":{\"stringValue\":\"m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"},\"photoUrl\":{\"nullValue\":null},\"provider\":{\"stringValue\":\"password\"},\"displayName\":{\"nullValue\":null},\"email\":{\"stringValue\":\"tristan.varewijck@gmail.com\"},\"admin\":{\"booleanValue\":true}},\"createTime\":\"2023-04-11T14:15:23.173200Z\",\"updateTime\":\"2023-04-11T14:28:35.351326Z\"},\"updateMask\":{}},\"context\":{\"eventId\":\"10ed276e-dbcf-4cf6-8960-b4146b221539\",\"timestamp\":\"2023-04-11T14:32:17.778Z\",\"eventType\":\"providers/cloud.firestore/eventTypes/document.update\",\"resource\":\"projects/tickety-85fd7/databases/(default)/documents/users/m5VT3iCPTKyXYgwTa2NJrOrQjHhe\"}}"}}
[info] >  {"severity":"INFO","message":"User session revoked"} {"user":{"severity":"INFO","message":"User session revoked"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"User session revoked\"}"}}
[debug] [2023-04-11T14:32:17.808Z] [worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-us-central1-updateAdminCustomClaim-a623daca-b2b4-4b48-a4ad-afcceae738d0]: IDLE"}}
[debug] [2023-04-11T14:32:17.808Z] [work-queue] {"queueLength":0,"workRunningCount":0}
[info] i  functions: Finished "updateAdminCustomClaim" in 10.811251ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"us-central1-updateAdminCustomClaim"},"extension":{},"message":"Finished \"updateAdminCustomClaim\" in 10.811251ms"}}
[debug] [2023-04-11T14:32:47.798Z] Apr 11, 2023 4:32:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:32:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:33:17.797Z] Apr 11, 2023 4:33:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:33:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:33:17.807Z] Apr 11, 2023 4:33:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:33:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:33:17.812Z] Apr 11, 2023 4:33:17 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:33:17 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreWriteHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-04-11T14:33:47.814Z] Apr 11, 2023 4:33:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:33:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:34:47.826Z] Apr 11, 2023 4:34:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:34:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:35:47.835Z] Apr 11, 2023 4:35:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:35:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:36:47.850Z] Apr 11, 2023 4:36:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:36:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:37:47.861Z] Apr 11, 2023 4:37:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:37:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:38:50.427Z] Apr 11, 2023 4:38:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:38:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:38:50.434Z] Apr 11, 2023 4:38:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:38:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:38:50.437Z] Apr 11, 2023 4:38:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:38:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:39:02.885Z] Apr 11, 2023 4:39:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:39:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:40:02.915Z] Apr 11, 2023 4:40:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:40:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:40:49.500Z] Apr 11, 2023 4:40:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:40:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:41:49.523Z] Apr 11, 2023 4:41:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:41:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:42:49.567Z] Apr 11, 2023 4:42:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:42:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:43:34.889Z] Apr 11, 2023 4:43:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:43:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:44:34.904Z] Apr 11, 2023 4:44:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:44:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:45:20.876Z] Apr 11, 2023 4:45:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:45:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:46:20.893Z] Apr 11, 2023 4:46:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:46:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:47:10.360Z] Apr 11, 2023 4:47:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:47:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:48:10.390Z] Apr 11, 2023 4:48:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:48:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:49:10.415Z] Apr 11, 2023 4:49:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:49:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:50:10.428Z] Apr 11, 2023 4:50:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:50:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:51:10.443Z] Apr 11, 2023 4:51:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:51:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:51:55.875Z] Apr 11, 2023 4:51:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:51:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:52:41.878Z] Apr 11, 2023 4:52:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:52:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:53:41.913Z] Apr 11, 2023 4:53:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:53:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:54:41.932Z] Apr 11, 2023 4:54:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:54:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:55:40.347Z] Apr 11, 2023 4:55:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:55:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:56:40.358Z] Apr 11, 2023 4:56:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:56:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:57:26.171Z] Apr 11, 2023 4:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:57:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:58:26.190Z] Apr 11, 2023 4:58:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:58:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T14:59:26.205Z] Apr 11, 2023 4:59:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 4:59:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:00:42.012Z] Apr 11, 2023 5:00:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:00:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:01:42.039Z] Apr 11, 2023 5:01:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:01:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:02:42.057Z] Apr 11, 2023 5:02:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:02:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:03:42.069Z] Apr 11, 2023 5:03:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:03:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:04:42.082Z] Apr 11, 2023 5:04:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:04:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:05:58.014Z] Apr 11, 2023 5:05:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:05:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:06:44.013Z] Apr 11, 2023 5:06:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:06:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:07:44.042Z] Apr 11, 2023 5:07:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:07:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:08:44.069Z] Apr 11, 2023 5:08:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:08:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:09:44.117Z] Apr 11, 2023 5:09:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:09:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:10:30.014Z] Apr 11, 2023 5:10:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:10:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:11:30.037Z] Apr 11, 2023 5:11:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:11:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:12:30.059Z] Apr 11, 2023 5:12:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:12:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:13:16.015Z] Apr 11, 2023 5:13:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:13:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:14:16.043Z] Apr 11, 2023 5:14:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:14:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:15:16.058Z] Apr 11, 2023 5:15:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:15:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:16:16.078Z] Apr 11, 2023 5:16:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:16:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:17:16.090Z] Apr 11, 2023 5:17:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:17:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:18:16.100Z] Apr 11, 2023 5:18:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:18:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:19:16.125Z] Apr 11, 2023 5:19:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:19:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:20:16.140Z] Apr 11, 2023 5:20:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:20:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:21:16.165Z] Apr 11, 2023 5:21:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:21:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:22:16.186Z] Apr 11, 2023 5:22:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:22:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:23:16.232Z] Apr 11, 2023 5:23:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:23:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:24:16.242Z] Apr 11, 2023 5:24:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:24:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:25:02.016Z] Apr 11, 2023 5:25:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:25:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:26:02.031Z] Apr 11, 2023 5:26:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:26:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:27:02.052Z] Apr 11, 2023 5:27:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:27:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:28:02.071Z] Apr 11, 2023 5:28:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:28:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:29:02.095Z] Apr 11, 2023 5:29:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:29:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:30:02.112Z] Apr 11, 2023 5:30:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:30:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:31:02.134Z] Apr 11, 2023 5:31:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:31:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:32:02.154Z] Apr 11, 2023 5:32:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:32:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:32:48.017Z] Apr 11, 2023 5:32:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:32:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:33:48.044Z] Apr 11, 2023 5:33:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:33:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:34:34.017Z] Apr 11, 2023 5:34:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:34:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:35:20.018Z] Apr 11, 2023 5:35:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:35:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:36:20.038Z] Apr 11, 2023 5:36:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:36:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:37:20.052Z] Apr 11, 2023 5:37:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:37:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:38:20.068Z] Apr 11, 2023 5:38:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:38:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:39:06.018Z] Apr 11, 2023 5:39:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:39:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:40:06.052Z] Apr 11, 2023 5:40:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:40:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:41:06.066Z] Apr 11, 2023 5:41:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:41:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:42:06.092Z] Apr 11, 2023 5:42:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:42:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:43:06.105Z] Apr 11, 2023 5:43:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:43:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:43:52.019Z] Apr 11, 2023 5:43:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:43:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:44:52.035Z] Apr 11, 2023 5:44:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:44:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:45:52.055Z] Apr 11, 2023 5:45:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:45:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:46:52.069Z] Apr 11, 2023 5:46:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:46:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:47:38.024Z] Apr 11, 2023 5:47:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:47:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:48:38.043Z] Apr 11, 2023 5:48:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:48:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:49:38.059Z] Apr 11, 2023 5:49:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:49:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:50:38.071Z] Apr 11, 2023 5:50:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:50:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:51:38.089Z] Apr 11, 2023 5:51:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:51:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:52:24.023Z] Apr 11, 2023 5:52:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:52:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:53:24.043Z] Apr 11, 2023 5:53:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:53:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:54:24.069Z] Apr 11, 2023 5:54:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:54:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:55:24.080Z] Apr 11, 2023 5:55:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:55:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:56:24.100Z] Apr 11, 2023 5:56:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:56:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:57:24.125Z] Apr 11, 2023 5:57:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:57:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:58:24.146Z] Apr 11, 2023 5:58:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:58:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T15:59:09.383Z] Apr 11, 2023 5:59:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 5:59:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:00:09.407Z] Apr 11, 2023 6:00:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:00:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:01:09.428Z] Apr 11, 2023 6:01:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:01:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:02:09.448Z] Apr 11, 2023 6:02:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:02:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:03:09.460Z] Apr 11, 2023 6:03:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:03:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:04:09.475Z] Apr 11, 2023 6:04:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:04:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:05:09.486Z] Apr 11, 2023 6:05:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:05:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:05:55.388Z] Apr 11, 2023 6:05:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:05:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:06:55.421Z] Apr 11, 2023 6:06:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:06:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:07:55.432Z] Apr 11, 2023 6:07:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:07:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:08:55.442Z] Apr 11, 2023 6:08:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:08:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:09:55.450Z] Apr 11, 2023 6:09:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:09:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:10:55.470Z] Apr 11, 2023 6:10:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:10:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:11:41.384Z] Apr 11, 2023 6:11:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:11:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:12:41.393Z] Apr 11, 2023 6:12:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:12:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:13:41.408Z] Apr 11, 2023 6:13:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:13:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:14:41.423Z] Apr 11, 2023 6:14:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:14:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:15:41.436Z] Apr 11, 2023 6:15:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:15:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:16:27.386Z] Apr 11, 2023 6:16:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:16:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:17:27.398Z] Apr 11, 2023 6:17:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:17:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:18:27.420Z] Apr 11, 2023 6:18:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:18:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:19:27.432Z] Apr 11, 2023 6:19:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:19:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:20:27.446Z] Apr 11, 2023 6:20:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:20:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:21:27.472Z] Apr 11, 2023 6:21:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:21:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:22:13.390Z] Apr 11, 2023 6:22:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:22:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:23:13.408Z] Apr 11, 2023 6:23:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:23:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:24:13.418Z] Apr 11, 2023 6:24:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:24:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:25:13.437Z] Apr 11, 2023 6:25:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:25:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:26:13.445Z] Apr 11, 2023 6:26:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:26:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:27:13.481Z] Apr 11, 2023 6:27:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:27:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:27:59.394Z] Apr 11, 2023 6:27:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:27:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:28:59.490Z] Apr 11, 2023 6:28:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:28:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:30:15.491Z] Apr 11, 2023 6:30:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:30:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:31:15.635Z] Apr 11, 2023 6:31:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:31:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:32:15.703Z] Apr 11, 2023 6:32:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:32:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:33:15.719Z] Apr 11, 2023 6:33:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:33:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-04-11T16:34:15.731Z] Apr 11, 2023 6:34:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Apr 11, 2023 6:34:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
